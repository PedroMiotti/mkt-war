{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","context/socket.ts","context/api.ts","utils/handleCookie.ts","utils/getUserIdByToken.ts","utils/history.ts","constants/SocketEvents.ts","context/types.ts","context/user/user.reducer.ts","context/user/user.context.ts","context/user/user.state.tsx","context/match/match.reducer.ts","context/match/match.context.ts","context/match/match.state.tsx","utils/chooseAvatar.ts","components/Containers/InfoBox/index.tsx","assets/icons/edit.svg","components/Containers/Avatar/index.tsx","components/PlayButton/index.tsx","assets/icons/trophy.svg","components/MatchInviteModal/index.tsx","components/OnlinePlayersModal/components/ListItem/index.tsx","components/OnlinePlayersModal/components/ListView/index.tsx","components/OnlinePlayersModal/index.tsx","hooks/useWindowDimension.ts","components/ChooseAvatarDrawer/index.tsx","components/LeaderboardModal/components/ListItem/index.tsx","components/LeaderboardModal/components/ListView/index.tsx","assets/icons/1_badge.svg","assets/icons/2_badge.svg","assets/icons/3_badge.svg","components/LeaderboardModal/index.tsx","assets/icons/dollar.svg","assets/icons/logout.svg","assets/icons/teamwork.svg","assets/icons/podium.svg","pages/Home/index.tsx","pages/Login/index.tsx","pages/Register/index.tsx","assets/icons/back.svg","assets/icons/check.svg","pages/Lobby/index.tsx","components/Quiz/components/AnswerButton/index.tsx","components/Quiz/index.tsx","components/Quiz/components/RoundCounter/index.tsx","pages/Game/index.tsx","assets/icons/gold-cup.svg","assets/icons/silver-cup.svg","assets/icons/empty-podium.svg","pages/Result/index.tsx","components/ProtectedRoute/index.tsx","router.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","socket","socketio","connect","SocketContext","React","createContext","instance","axios","create","baseURL","getCookie","cookieName","name","cookieArr","document","cookie","split","i","length","temp","trim","indexOf","substring","getUserIdByToken","user_id","exp","iat","key","hasToken","jwt_decode","history","createBrowserHistory","SocketEvents","CLIENT_CONNECT","CLIENT_DISCONNECT","CLIENT_JOIN_MATCH","CLIENT_UPDATE_STATUS","CLIENT_LEAVE_MATCH","CLIENT_SET_READY","CLIENT_INVITE_PLAYER","CLIENT_DENY_INVITE","CLIENT_ANSWER_QUESTION","CLIENT_USER_READY","SERVER_SEND_INVITE","SERVER_PLAYER_DENIED_INVITE","SERVER_PLAYER_JOINED","SERVER_PLAYER_READY","SERVER_PLAYER_LEFT","SERVER_MATCH_START","SERVER_MATCH_START_ROUND","SERVER_MATCH_START_QUESTION","SERVER_MATCH_COUNTDOWN","SERVER_MATCH_END_ROUND","SERVER_MATCH_END","CREATE_MATCH","JOIN_MATCH","MATCH_READY","SET_READY","SET_OPPONENT_READY","SET_GAME","SET_ROUND","START_MATCH","START_QUESTION","ROUND_COUNTDOWN","ROUND_RESULT","MATCH_RESULT","MATCH_END","HANDLE_INVITE","CREATE_USER","LOGIN","UPDATE_USER","USER_PROFILE","LOGOUT","DELETE_USER","UPDATE_AVATAR","ONLINE_PLAYERS","LEADERBOARD","SET_ERROR","SET_LOADING","initialState","id","isLoggedIn","socketID","username","trophies","coins","avatar","onlinePlayers","errorMsg","loading","leaderboard","createUser","login","updateUser","logout","deleteUser","userProfile","setLoading","getOnlinePlayers","setUserOnline","updateUserAvatar","getLeaderboard","roomReducer","action","type","payload","avatarId","message","DEFAULT_VALUE","UserContext","useUserContext","useContext","UserState","children","initialValues","userReducer","dispatch","baseUrl","values","a","password","post","withCredentials","res","toString","push","e","response","data","notification","description","icon","CloseCircleOutlined","style","color","className","placement","bottom","duration","get","userId","delete","put","players","Provider","value","emit","_id","ownerId","ownerInfo","opponentInfo","userReady","opponentReady","receivedInvite","invite","matchId","game","currentRound","totalRound","showRoundScreen","round","questionId","questionText","showCorrectAnswer","answers","correctAnswer","roundTime","roundResult","ownerSelected","opponentSelected","ownerScore","opponentScore","matchResult","owner","score","winned","opponent","matchStarted","createMatch","acceptBattleInvite","setUserReady","answerQuestion","matchEnded","denyBattleInvite","matchReducer","opponentId","MatchContext","useMatchContext","MatchState","on","open","onClose","LoadingOutlined","ownerData","opponentData","title","answer1","text","answer2","answer3","answer4","seconds","answer","ownerInvite","off","parseInt","answerId","SelectAvatarSrc","result","avatars","filter","src","InfoBox","alt","Avatar","avatarSrc","openDrawer","onClick","EditIcon","toUpperCase","PlayButton","clickAction","MatchInvite","openModal","closeModal","footer","centered","visible","closable","size","verticalAlign","border","TrophyIcon","ListItem","Pkey","setPlayer","inviteButton","ListView","playersList","useState","playerId","setPlayerId","useEffect","map","player_avatar","player_username","player_trophies","player_id","OnlinePlayersModal","isvisible","setIsVisible","onCancel","player","useWindowDimensions","hasWindow","getWindowDimensions","width","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","ChooseAvatarDrawer","closeDrawer","setVisible","podium","setPodium","leaderboardListRest","setLeaderboardListRest","slice","secondBadge","firstBadge","thirdBadge","Home","userAvatar","setUserAvatar","onlinePlayersModalVisible","setOnlinePlayersModalVisible","chooseAvatarsDrawerVisible","setChooseAvatarsDrawerVisible","leaderboardModalVisible","setLeaderboardModalVisible","battleInviteModalVisible","setBattleInviteModalVisible","playWithFriend","MatchInviteModal","LeaderboardModal","marginRight","CoinIcon","ComunityIcon","stopPropagation","PodiumIcon","LogoutIcon","Login","onFinish","Item","rules","required","placeholder","prefix","UserOutlined","Password","LockOutlined","Register","Lobby","useParams","opponentAccepted","setOpponentAccepted","userReady_","setUserReady_","opponentReady_","setOpponentReady_","opponentInformation","setOpponentInformation","timerAnimationOptions","loop","autoplay","animationData","TimerAnimation","rendererSettings","preserveAspectRatio","SwordsAnimationOptions","SwordsAnimation","FirstRoundCountdownAnimationOptions","FirtRoundCountdownAnimation","BackIcon","CheckIcon","disabled","options","marginLeft","AnswerButton","onSelect","isDisabled","correctId","roundEnd","ownerAvatar","opponentAvatar","selected","setSelected","setCorrectAnswer","ownerSelectedAnswer","setOwnerSelectedAnswer","opponentSelectedAnswer","setOpponentSelectedAnswer","Quiz","disableAnswerButtons","setDisableAnswerButtons","AnswerQuestion","useCallback","RoundCounter","totalRounds","Game","setShowRoundScreen","showGameScreen","setShowGameScreen","ResultPage","lost","tied","GoldTrophyIcon","SilverTrophyIcon","EmptyPodiumIcon","marginBottom","ProtectedRoute","props","Component","component","rest","render","to","pathname","from","Router","path","LoginPage","RegisterPage","exact","HomePage","LobbyPage","GamePage","ReactDOM","StrictMode","getElementById","URL","process","href","origin","fetch","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"iy6CAYMA,G,cAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,4DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCjGjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCLDO,E,OAAgCC,EAASC,QAAQ,KACjDC,EAAgBC,IAAMC,cAAcL,G,mECApCM,E,OAAWC,EAAMC,OAAO,CACnCC,QAHuB,M,SCHlB,SAASC,EAAUC,GAGxB,IAFA,IAAIC,EAAOD,EAAa,IACpBE,EAAYC,SAASC,OAAOC,MAAM,KAC7BC,EAAI,EAAGA,EAAIJ,EAAUK,OAAQD,IAAK,CACzC,IAAIE,EAAON,EAAUI,GAAGG,OACxB,GAA0B,GAAtBD,EAAKE,QAAQT,GACf,OAAOO,EAAKG,UAAUV,EAAKM,OAAQC,EAAKD,QAG5C,MAAO,GCAF,IAAMK,EAAmB,WAC9B,IAAIC,EAAkB,CAACC,IAAK,EAAGC,IAAK,EAAGC,IAAK,GACxCC,EAAmBlB,EAAU,UAKjC,OAJIkB,IACFJ,EAAUK,YAAWD,IAGhBJ,G,QCZMM,EAFCC,cC4BDC,EA9BO,CACpBC,eAAgB,UAChBC,kBAAmB,aACnBC,kBAAmB,aACnBC,qBAAsB,gBACtBC,mBAAoB,cACpBC,iBAAkB,cAClBC,qBAAsB,eACtBC,mBAAoB,cACpBC,uBAAwB,kBACxBC,kBAAmB,mBAGnBC,mBAAoB,cACpBC,4BAA6B,sBAE7BC,qBAAsB,sBACtBC,oBAAqB,qBACrBC,mBAAoB,oBAEpBC,mBAAoB,cACpBC,yBAA0B,oBAC1BC,4BAA6B,uBAC7BC,uBAAwB,kBACxBC,uBAAwB,kBACxBC,iBAAkB,aCtBPC,EAAuB,eACvBC,EAAqB,aACrBC,EAAsB,cACtBC,EAAoB,YACpBC,EAA6B,qBAC7BC,EAAmB,WACnBC,EAAoB,YACpBC,EAAsB,cACtBC,EAAyB,iBACzBC,EAA0B,kBAC1BC,EAAuB,eACvBC,EAAuB,eACvBC,EAAoB,YAGpBC,EAAwB,gBAGxBC,EAAsB,cACtBC,EAAgB,QAChBC,EAAsB,cACtBC,EAAuB,eACvBC,EAAiB,SACjBC,EAAsB,cACtBC,EAAwB,gBAExBC,EAAyB,iBACzBC,EAAsB,cAItBC,EAAoB,YACpBC,EAAsB,cChBtBC,EAAsB,CACjCC,GAAI,GACJC,aAJqBvE,EAAU,UAK/BwE,SAAU,GACVtE,KAAM,GACNuE,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,cAAe,GACfC,SAAU,GACVC,SAAS,EACTC,YAAa,GAEbC,WAAY,kBAAM,MAClBC,MAAO,kBAAM,MACbC,WAAY,kBAAM,MAClBC,OAAQ,kBAAM,MACdC,WAAY,kBAAM,MAClBC,YAAa,kBAAM,MACnBC,WAAY,kBAAM,MAClBC,iBAAkB,kBAAM,MACxBC,cAAe,kBAAM,MACrBC,iBAAkB,kBAAM,MACxBC,eAAgB,kBAAM,OAKT,SAASC,KAGrB,IAFDtH,EAEA,uDAFe+F,EACfwB,EACA,uCACQC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,KAAKpC,EACH,OAAO,2BACFpF,GADL,IAEEgG,GAAIyB,EAAQzB,GACZpE,KAAM6F,EAAQ7F,KACduE,SAAUsB,EAAQtB,WAGtB,KAAKd,EACH,OAAO,2BACFrF,GADL,IAEEgG,GAAIyB,EAAQzB,GACZG,SAAUsB,EAAQtB,SAClBK,SAAU,KAGd,KAAKjB,EACH,OAAO,2BACFvF,GADL,IAEE4B,KAAM6F,EAAQ7F,KACduE,SAAUsB,EAAQtB,SAClBG,OAAQmB,EAAQnB,OAChBD,MAAOoB,EAAQpB,MACfD,SAAUqB,EAAQrB,WAGpB,KAAKV,EACL,OAAO,2BACF1F,GADL,IAEEsG,OAAQmB,EAAQC,WAGpB,KAAKpC,EACH,OAAO,2BACFtF,GADL,IAEEyG,SAAS,IAGb,KAAKjB,EACH,OAAO,2BACFxF,GADL,IAEEgG,GAAI,GACJC,YAAa,EACbC,SAAU,GACVtE,KAAM,GACNuE,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRE,SAAU,GACVC,SAAS,IAGb,KAAKhB,EACH,OAAO,eACFzF,GAGP,KAAK2F,EACH,OAAO,2BACF3F,GADL,IAEEuG,cAAekB,EAAQlB,gBAG3B,KAAKX,EACH,OAAO,2BACF5F,GADL,IAEE0G,YAAae,EAAQf,cAGzB,KAAKZ,EACH,OAAO,2BACF9F,GADL,IAEEyG,SAAS,IAGb,KAAKZ,EACH,OAAO,2BACF7F,GADL,IAEEyG,SAAS,EACTD,SAAUiB,EAAQE,UAGtB,QACE,OAAO3H,GCtIb,IAAM4H,GAAoB,eACnB7B,GAGD8B,GAAczG,IAAMC,cAAcuG,IACzBC,MAEFC,GAAiB,WAC1B,OAAO1G,IAAM2G,WAAWF,K,QCmRbG,GA/Pa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvBlC,EAAmB,eACpBmC,GAGClH,EAASI,aAAiBD,GALY,EAOlBC,aAAiB+G,GAAapC,GAPZ,mBAOrC/F,EAPqC,KAO9BoI,EAP8B,KAStCC,EAAU,eAGV1B,EAAU,uCAAG,WAAO2B,GAAP,mBAAAC,EAAA,sEAMPpC,EAA6BmC,EAA7BnC,SAAUvE,EAAmB0G,EAAnB1G,KAAM4G,EAAaF,EAAbE,SANT,SAQTjH,EACHkH,KACCJ,EAAU,YACV,CAAElC,WAAUvE,OAAM4G,YAClB,CAAEE,iBAAiB,IAEpBhJ,MAAK,SAACiJ,GACL,IAAInG,EAAkBD,IAEtB6F,EAAS,CACPZ,KAAMpC,EACNqC,QAAS,CAAEtB,WAAUvE,OAAMoE,GAAIxD,EAAQG,IAAIiG,cAG7C9F,EAAQ+F,KAAK,QAEdvI,OAAM,SAACwI,GACNV,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAASmB,EAAEC,SAASC,WA3BtB,sDA+BfZ,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAAS,KAAEoB,SAASC,QAjClB,wDAAH,sDAuCVpC,EAAK,uCAAG,WAAO0B,GAAP,iBAAAC,EAAA,sEAEFpC,EAAuBmC,EAAvBnC,SAAUqC,EAAaF,EAAbE,SAFR,SAIJjH,EACHkH,KACCJ,EAAU,SACV,CAAElC,WAAUqC,YACZ,CAAEE,iBAAiB,IAEpBhJ,MAAK,SAACiJ,GACL,IAAInG,EAAkBD,IAEtB6F,EAAS,CACPZ,KAAMnC,EACNoC,QAAS,CAAEtB,WAAUH,GAAIxD,EAAQG,IAAIiG,cAGvC9F,EAAQ+F,KAAK,QAEdvI,OAAM,SAACwI,GACNV,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAASmB,EAAEC,SAASC,QAGjCC,IAAa1I,MAAM,CACjBoH,QAAUmB,EAAEC,SAASC,KACrBE,YAAc,oBACdC,KAAO,eAACC,EAAA,EAAD,CAAqBC,MAAO,CAAEC,MAAO,aAC5CC,UAAY,0BACZC,UAAY,aACZC,OAAS,GACTC,SAAW,SAjCP,sDAsCVtB,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAAS,KAAEoB,SAASC,QAxCvB,wDAAH,sDA+CLhC,EAAW,uCAAG,WAAOhB,GAAP,SAAAuC,EAAA,+EAEVhH,EACHoI,IAAItB,EAAO,mBAAerC,IAC1BtG,MAAK,SAACiJ,GAAS,IAAD,EACuCA,EAAIK,KAAhDpH,EADK,EACLA,KAAMuE,EADD,EACCA,SAAUG,EADX,EACWA,OAAQD,EADnB,EACmBA,MAAOD,EAD1B,EAC0BA,SAEvCgC,EAAS,CACPZ,KAAMjC,EACNkC,QAAS,CAAE7F,OAAMuE,WAAUG,SAAQD,QAAOD,iBAG7C9F,OAAM,SAACwI,GACNV,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAASmB,EAAEC,SAASC,WAfrB,sDAmBhBZ,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAAS,KAAEoB,SAASC,QArBjB,wDAAH,sDA2BXlC,EAAM,uCAAG,WAAO8C,GAAP,SAAArB,EAAA,+EAELhH,EACHsI,OAAOxB,EAAO,kBAAcuB,IAC5BlK,MAAK,WPtJP,IAAsBiC,IOuJN,SPtJrBG,SAASC,OAASJ,EAAa,eOwJvBmB,EAAQ+F,KAAK,UAEbT,EAAS,CACPZ,KAAMhC,OAITlF,OAAM,SAACwI,GACNV,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAASmB,EAAEC,SAASC,WAjB1B,sDAqBXZ,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAAS,KAAEoB,SAASC,QAvBtB,wDAAH,sDAkCN5B,EAAgB,uCAAG,WAAOM,GAAP,eAAAa,EAAA,sEAEjB/F,EAAkBD,IAFD,SAIfhB,EACHuI,IAAIzB,EAAO,kBAAc7F,EAAQG,IAAtB,YAA6B+E,IACxChI,MAAK,WACJ0I,EAAS,CACPZ,KAAM9B,EACN+B,QAAS,CAAEC,iBATI,sDAcrBU,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAAS,kCAhBD,wDAAH,sDA2BhBT,EAAgB,uCAAG,sBAAAqB,EAAA,+EAEfhH,EAAMoI,IAAItB,EAAU,WACzB3I,MAAK,SAACqK,GACH3B,EAAS,CACPZ,KAAM7B,EACN8B,QAAS,CAAElB,cAAewD,EAAQf,WANnB,sDAWrBZ,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAAS,KAAEoB,SAASC,QAbZ,wDAAH,qDAkBhB3B,EAAc,uCAAG,sBAAAkB,EAAA,+EAEbhH,EAAMoI,IAAItB,EAAU,gBACzB3I,MAAK,SAACqK,GACH3B,EAAS,CACPZ,KAAM5B,EACN6B,QAAS,CAAEf,YAAaqD,EAAQf,WANnB,sDAWnBZ,EAAS,CACPZ,KAAM3B,EACN4B,QAAS,CAAEE,QAAS,KAAEoB,SAASC,QAbd,wDAAH,qDAkBpB,OACE,eAAC,GAAYgB,SAAb,CACEC,MAAO,CACLjE,GAAIhG,EAAMgG,GACVC,WAAYjG,EAAMiG,WAClBC,SAAUlG,EAAMkG,SAChBC,SAAUnG,EAAMmG,SAChBvE,KAAM5B,EAAM4B,KACZwE,SAAUpG,EAAMoG,SAChBC,MAAOrG,EAAMqG,MACbC,OAAQtG,EAAMsG,OACdC,cAAevG,EAAMuG,cACrBE,QAASzG,EAAMyG,QACfD,SAAUxG,EAAMwG,SAChBE,YAAa1G,EAAM0G,YACnBC,aACAC,QACAC,WA3Da,aA4DbC,SACAC,WA3Da,aA4DbC,cACAC,WA3Da,aA4DbC,mBACAC,cA3FgB,WACpB,IAAI3E,EAAkBD,IACtBvB,EAAOkJ,KAAKlH,EAAaI,qBAAsB,CAAEwG,OAAQpH,EAAQG,IAAIiG,cA0FjExB,mBACAC,kBAxBJ,SA2BGY,KCxQMlC,GAAsB,CACjCoE,IAAK,GACLC,QAAS,GACTC,UAAW,CACTrE,GAAI,EACJG,SAAU,GACVC,SAAU,EACVxE,KAAM,GACNyE,MAAO,EACPC,OAAQ,GAEVgE,aAAc,CACZtE,GAAI,EACJG,SAAU,GACVC,SAAU,EACVxE,KAAM,GACNyE,MAAO,EACPC,OAAQ,GAEViE,WAAW,EACXC,eAAe,EACfC,gBAAgB,EAChBC,OAAQ,CACNC,QAAS,GACTN,UAAW,CACTrE,GAAI,EACJG,SAAU,GACVC,SAAU,EACVE,OAAQ,IAGZsE,KAAM,CACJC,aAAc,EACdC,WAAY,EACZC,iBAAiB,GAEnBC,MAAO,CACLC,WAAY,GACZC,aAAc,GACdC,mBAAmB,EACnBC,QAAS,GACTC,cAAe,EACfC,UAAW,IAEbC,YAAa,CACXC,cAAe,EACfC,iBAAkB,EAClBC,WAAY,EACZC,cAAe,GAEjBC,YAAa,CACXC,MAAM,CACJC,MAAO,EACPC,QAAQ,EACR1F,MAAO,EACPD,SAAU,GAEZ4F,SAAU,CACRF,MAAO,EACPC,QAAQ,EACR1F,MAAO,EACPD,SAAU,IAGd6F,cAAc,EACdxF,SAAS,EACTyF,YAAa,kBAAM,MACnBC,mBAAoB,kBAAM,MAC1BC,aAAc,kBAAM,MACpBC,eAAgB,kBAAM,MACtBpF,WAAY,kBAAM,MAClBqF,WAAY,kBAAM,MAClBC,iBAAkB,kBAAM,OAIX,SAASC,KAGrB,IAFDxM,EAEA,uDAFe+F,GACfwB,EACA,uCACQC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,KAAKlD,EACL,KAAKC,EACH,OAAO,2BACFvE,GADL,IAEEmK,IAAK1C,EAAQ0C,IACbC,QAAS3C,EAAQ2C,QACjBqC,WAAYhF,EAAQgF,aAGxB,KAAKjI,EACH,OAAO,2BACFxE,GADL,IAEEqK,UAAW5C,EAAQ4C,UACnBC,aAAc7C,EAAQ6C,eAG1B,KAAK7F,EACH,OAAO,2BACFzE,GADL,IAEEuK,WAAW,IAGf,KAAK7F,EACH,OAAO,2BACF1E,GADL,IAEEwK,eAAe,IAGnB,KAAKrF,EACH,OAAO,2BACFnF,GADL,IAEEyK,gBAAgB,EAChBC,OAAQ,CAAEC,QAASlD,EAAQkD,QAASN,UAAW5C,EAAQ4C,WACvD5D,SAAS,IAGb,KAAK9B,EACH,OAAO,2BACF3E,GADL,IAEE4K,KAAM,CACJC,aAAcpD,EAAQoD,aACtBC,WAAYrD,EAAQqD,WACpBC,iBAAiB,KAIvB,KAAKjG,EACH,OAAO,2BACF9E,GADL,IAEE4K,KAAK,2BACA5K,EAAM4K,MADP,IAEFG,iBAAiB,MAIvB,KAAKnG,EACH,OAAO,2BACF5E,GADL,IAEEgL,MAAO,CACLC,WAAYxD,EAAQwD,WACpBC,aAAczD,EAAQyD,aACtBC,mBAAmB,EACnBC,QAAS3D,EAAQ2D,QACjBC,cAAe5D,EAAQ4D,cACvBC,UAAW,MAIjB,KAAKvG,EACH,OAAO,2BACF/E,GADL,IAEEgL,MAAM,2BACDhL,EAAMgL,OADN,IAEHM,UAAW7D,EAAQ6D,cAIzB,KAAKzG,EACH,OAAO,2BACF7E,GADL,IAEEiM,cAAc,IAGlB,KAAKjH,EACH,OAAO,2BACFhF,GADL,IAEEuL,YAAa,CACXC,cAAe/D,EAAQ+D,cACvBC,iBAAkBhE,EAAQgE,iBAC1BC,WAAYjE,EAAQiE,WACpBC,cAAelE,EAAQkE,eAEzBX,MAAM,2BACDhL,EAAMgL,OADN,IAEHG,mBAAmB,MAIzB,KAAKlG,EACH,OAAO,2BACFjF,GADL,IAEE4L,YAAa,CACXC,MAAOpE,EAAQoE,MACfG,SAAUvE,EAAQuE,YAIxB,KAAK9G,EACH,OAAO,2BACFlF,GADL,IAEEmK,IAAK,GACLC,QAAS,GACTC,UAAW,CACTrE,GAAI,EACJG,SAAU,GACVC,SAAU,EACVxE,KAAM,GACNyE,MAAO,EACPC,OAAQ,GAEVgE,aAAc,CACZtE,GAAI,EACJG,SAAU,GACVC,SAAU,EACVxE,KAAM,GACNyE,MAAO,EACPC,OAAQ,GAEViE,WAAW,EACXC,eAAe,EACfC,gBAAgB,EAChBC,OAAQ,CACNC,QAAS,GACTN,UAAW,CACTrE,GAAI,EACJG,SAAU,GACVC,SAAU,EACVE,OAAQ,IAGZsE,KAAM,CACJC,aAAc,EACdC,WAAY,EACZC,iBAAiB,GAEnBC,MAAO,CACLC,WAAY,GACZC,aAAc,GACdC,mBAAmB,EACnBC,QAAS,GACTC,cAAe,EACfC,UAAW,IAEbC,YAAa,CACXC,cAAe,EACfC,iBAAkB,EAClBC,WAAY,EACZC,cAAe,GAEjBC,YAAa,CACXC,MAAM,CACJC,MAAO,EACPC,QAAQ,EACR1F,MAAO,EACPD,SAAU,GAEZ4F,SAAU,CACRF,MAAO,EACPC,QAAQ,EACR1F,MAAO,EACPD,SAAU,MAMlB,KAAKN,EACH,OAAO,2BACF9F,GADL,IAEEyG,SAAS,IAGb,QACE,OAAOzG,GCzRb,IAAM4H,GAAoB,eACrB7B,IAGC2G,GAAetL,IAAMC,cAAcuG,IAC1B8E,MAEFC,GAAkB,WAC7B,OAAOvL,IAAM2G,WAAW2E,K,SC2XXE,GAjWc,SAAC,GAAkB,IAAhB3E,EAAe,EAAfA,SACxBlC,EAAmB,eACpBmC,IAGClH,EAASI,aAAiBD,GALa,EAOnBC,aAAiBoL,GAAczG,GAPZ,mBAOtC/F,EAPsC,KAO/BoI,EAP+B,KASvCC,EAAkB,gBAExBjH,aAAgB,WA4Ld,OA1LAJ,EAAO6L,GAAG7J,EAAae,oBAAoB,SAACiF,GAE1CC,IAAa6D,KAAK,CAChBnF,QAAU,iCACVuB,YAAc,+CACd6D,QAAU,kBAAMT,KAChBnD,KAAO,eAAC6D,GAAA,EAAD,CAAiB3D,MAAO,CAAEC,MAAO,aACxCC,UAAY,oBACZC,UAAY,aACZC,OAAS,GACTC,SAAW,SAMf1I,EAAO6L,GAAG7J,EAAaY,6BAA6B,SAACoF,GACnDC,IAAa6D,KAAK,CAChBnF,QAAU,iDACVuB,YAAc,+CACd6D,QAAU,kBAAMT,KAChBnD,KAAO,eAAC6D,GAAA,EAAD,CAAiB3D,MAAO,CAAEC,MAAO,aACxCC,UAAY,oBACZC,UAAY,aACZC,OAAS,GACTC,SAAW,SAMf1I,EAAO6L,GAAG7J,EAAaqB,kBAAkB,SAAC2E,GACxC,IAAIiE,EACAC,EAEiB3K,IAEVI,IAAIiG,aAAeI,EAAK6C,MAAM7F,GAAG4C,YAC1CqE,EAAYjE,EAAK6C,MACjBqB,EAAelE,EAAKgD,WAEpBiB,EAAYjE,EAAKgD,SACjBkB,EAAelE,EAAK6C,OAGtBzD,EAAS,CACPZ,KAAMvC,EACNwC,QAAQ,CACNoE,MAAOoB,EACPjB,SAAUkB,KAIdpK,EAAQ+F,KAAR,cAIF7H,EAAO6L,GAAG7J,EAAagB,oBAAoB,WACzCoE,EAAS,CACPZ,KAAM3C,OAKV7D,EAAO6L,GAAG7J,EAAaiB,0BAA0B,SAAC+E,GAAe,IACvD6B,EAA6B7B,EAA7B6B,aAAcC,EAAe9B,EAAf8B,WAEtB1C,EAAS,CACPZ,KAAM7C,EACN8C,QAAS,CAAEoD,eAAcC,gBAG3BhI,EAAQ+F,KAAR,YAIF7H,EAAO6L,GAAG7J,EAAakB,6BAA6B,SAAC8E,GAEnDZ,EAAS,CACPZ,KAAM5C,EACN6C,QAAS,CACPwD,WAAYjC,EAAKhD,GACjBkF,aAAclC,EAAKmE,MACnB/B,QAAS,CACP,CAAEpF,GAAIgD,EAAKoE,QAAQpH,GAAIqH,KAAMrE,EAAKoE,QAAQC,MAC1C,CAAErH,GAAIgD,EAAKsE,QAAQtH,GAAIqH,KAAMrE,EAAKsE,QAAQD,MAC1C,CAAErH,GAAIgD,EAAKuE,QAAQvH,GAAIqH,KAAMrE,EAAKuE,QAAQF,MAC1C,CAAErH,GAAIgD,EAAKwE,QAAQxH,GAAIqH,KAAMrE,EAAKwE,QAAQH,OAE5ChC,cAAerC,EAAKqC,iBAIxBjD,EAAS,CACPZ,KAAM1C,OAMV9D,EAAO6L,GAAG7J,EAAamB,wBAAwB,SAAC6E,GAC9CZ,EAAS,CACPZ,KAAMzC,EACN0C,QAAS,CAAC6D,UAAWtC,EAAKyE,cAM9BzM,EAAO6L,GAAG7J,EAAaoB,wBAAwB,SAAC4E,GAC9C,IAAIwC,EACAC,EACAC,EACAC,EAEiBpJ,IAEVI,IAAIiG,aAAeI,EAAK6C,MAAM7F,GAAG4C,YAC1C4C,EAAgBxC,EAAK6C,MAAM6B,OAC3BjC,EAAmBzC,EAAKgD,SAAS0B,OACjChC,EAAa1C,EAAK6C,MAAMC,MACxBH,EAAgB3C,EAAKgD,SAASF,QAE9BN,EAAgBxC,EAAKgD,SAAS0B,OAC9BjC,EAAmBzC,EAAK6C,MAAM6B,OAC9BhC,EAAa1C,EAAKgD,SAASF,MAC3BH,EAAgB3C,EAAK6C,MAAMC,OAG7B1D,EAAS,CACPZ,KAAMxC,EACNyC,QAAS,CACP+D,gBACAC,mBACAC,aACAC,sBAON3K,EAAO6L,GAAG7J,EAAac,qBAAqB,SAACkF,GAC3C,IAAIY,EAAiBrH,IACjByG,EAAKY,OAAOhB,aAAegB,EAAOjH,IAAIiG,YACxCR,EAAS,CACPZ,KAAM9C,OAMZ1D,EAAO6L,GAAG7J,EAAaW,oBAAoB,SAACqF,GAC1CZ,EAAS,CACPZ,KAAMrC,EACNsC,QAAS,CACPkD,QAAS3B,EAAK2B,QACdN,UAAWrB,EAAK2E,kBAMtB3M,EAAO6L,GAAG7J,EAAaa,sBAAsB,SAACmF,GAC5C,IAAIiE,EACAC,EAEiB3K,IAEVI,IAAIiG,aAAeI,EAAK6C,MAAM7F,GAAG4C,YAC1CqE,EAAYjE,EAAK6C,MACjBqB,EAAelE,EAAKgD,WAEpBiB,EAAYjE,EAAKgD,SACjBkB,EAAelE,EAAK6C,OAGtBzD,EAAS,CACPZ,KAAMhD,EACJiD,QAAS,CACT4C,UAAW4C,EACX3C,aAAc4C,QAKb,WACLlM,EAAO4M,IAAI5K,EAAaW,oBACxB3C,EAAO4M,IAAI5K,EAAaa,sBACxB7C,EAAO4M,IAAI5K,EAAac,qBACxB9C,EAAO4M,IAAI5K,EAAaY,6BAExB5C,EAAO4M,IAAI5K,EAAamB,wBACxBnD,EAAO4M,IAAI5K,EAAakB,6BACxBlD,EAAO4M,IAAI5K,EAAaiB,0BACxBjD,EAAO4M,IAAI5K,EAAagB,oBACxBhD,EAAO4M,IAAI5K,EAAaqB,kBACxBrD,EAAO4M,IAAI5K,EAAae,uBAGzB,IAGH,IAAMmI,EAAW,uCAAG,WAAO9B,EAAiBqC,GAAxB,SAAAlE,EAAA,+EAEVhH,EACHkH,KAAKJ,EAAO,UAAc,CAAE+B,WAAW,CAAE1B,iBAAiB,IAC1DhJ,MAAK,SAACiL,GACL3J,EAAOkJ,KAAKlH,EAAaO,qBAAsB,CAC7CoH,QAASA,EAAQ3B,KACjByD,aACArC,YAGFpJ,EAAOkJ,KAAKlH,EAAaG,kBAAmB,CAC1CwH,QAASA,EAAQ3B,KACjBoB,YAIFhC,EAAS,CACPZ,KAAMlD,EACNmD,QAAS,CAAE0C,IAAKQ,EAAQ3B,KAAMoB,UAASqC,WAAY,KAGrD3J,EAAQ+F,KAAR,iBAAuB8B,EAAQ3B,UAtBnB,sDA0BhB9I,QAAQC,IAAR,MA1BgB,wDAAH,wDA+BXgM,EAAkB,uCAAG,WACzBvC,EACAe,EACAP,GAHyB,SAAA7B,EAAA,+EAMjBhH,EACHuI,IAAIzB,EAAO,gBAAYuB,EAAZ,YAAsBe,GAAW,CAAEjC,iBAAiB,IAC/DhJ,MAAK,WACJsB,EAAOkJ,KAAKlH,EAAaG,kBAAmB,CAC1CwH,QAASkD,SAASlD,GAClBf,WAGFxB,EAAS,CACPZ,KAAMjD,EACNkD,QAAS,CAAE0C,IAAKQ,EAASP,UAASqC,WAAY7C,KAGhD9G,EAAQ+F,KAAR,iBAAuB8B,OAnBJ,sDAsBvBzK,QAAQC,IAAR,MAtBuB,wDAAH,0DA0BlBoM,EAAgB,uCAAG,WACvB5B,EACAP,GAFuB,SAAA7B,EAAA,sDAKvBvH,EAAOkJ,KAAKlH,EAAaQ,mBAAoB,CAC3CmH,QAASkD,SAASlD,GAClBP,QAASA,IAPY,2CAAH,wDAyChBkC,EAAa,WACjBlE,EAAS,CACPZ,KAAMtC,IAGRpC,EAAQ+F,KAAR,MAGF,OACE,eAAC,GAAamB,SAAd,CACEC,MAAO,CACLE,IAAKnK,EAAMmK,IACXC,QAASpK,EAAMoK,QACfC,UAAWrK,EAAMqK,UACjBC,aAActK,EAAMsK,aACpBC,UAAWvK,EAAMuK,UACjBC,cAAexK,EAAMwK,cACrBC,eAAgBzK,EAAMyK,eACtBC,OAAQ1K,EAAM0K,OACdE,KAAM5K,EAAM4K,KACZI,MAAOhL,EAAMgL,MACbO,YAAavL,EAAMuL,YACnBK,YAAa5L,EAAM4L,YACnBK,aAAcjM,EAAMiM,aACpBxF,QAASzG,EAAMyG,QACfyF,cACAC,qBACAlF,WAvDa,WACjBmB,EAAS,CACPZ,KAAM1B,KAsDJuG,eAnCiB,SAAC1B,EAAiBM,EAAoB6C,EAAkBzC,GAC7E,IAAI7I,EAAkBD,IAEtBvB,EAAOkJ,KAAKlH,EAAaS,uBAAwB,CAACkH,QAASA,EAASf,OAAQpH,EAAQG,IAAKsI,aAAY6C,WAAUzC,mBAiC3Ge,aAlDe,SAACzB,GACpB,IAAIf,EAAiBrH,IAErBvB,EAAOkJ,KAAKlH,EAAaU,kBAAmB,CAC1CiH,QAASkD,SAASlD,GAClBf,OAAQA,EAAOjH,IAAIiG,aAGrBR,EAAS,CACPZ,KAAM/C,KA0CJ6H,aACAC,oBAtBJ,SAyBGtE,K,6BCrXQ8F,GAXS,SAACrG,GACrB,IAAIsG,EAOJ,OAJAA,EAAS1H,GAAO2H,QAAQC,QAAO,SAACjM,GAAD,OAAOA,EAAE+D,GAAG4C,YAAclB,MAE5C,GAAKsG,EAAO,GAAGG,IAAM,ICavBC,I,OAZ0B,SAAC,GAAkB,IAAjBjF,EAAgB,EAAhBA,KAAMkE,EAAU,EAAVA,KAC/C,OACE,uBAAK9D,UAAU,oBAAf,UACE,sBAAK4E,IAAKhF,EAAMI,UAAU,eAAe8E,IAAI,kBAC7C,8BAAKhB,SCbI,I,OAAA,IAA0B,kCC6B1BiB,GAjBwB,SAAC,GAAyC,IAAvCnI,EAAsC,EAAtCA,SAAUoI,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC7D,OACE,uBAAKjF,UAAU,mBAAmBkF,QAASD,EAA3C,UAEE,sBAAKjF,UAAU,wBAAf,SACE,sBAAK4E,IAAKO,GAAUnF,UAAU,mBAAmB8E,IAAI,kBAGvD,sBAAK9E,UAAU,yBAAf,SACE,sBAAK4E,IAAKI,EAAWhF,UAAU,eAAe8E,IAAI,kBAGpD,qBAAI9E,UAAU,kBAAd,SAAiCpD,EAASwI,oBCLjCC,I,OAXgC,SAAC,GAA2B,IAAzBvB,EAAwB,EAAxBA,KAAMwB,EAAkB,EAAlBA,YACtD,OACE,yBAAQtF,UAAU,uBAAuBkF,QAASI,EAAlD,SACE,8BAAKxB,Q,6BCXI,OAA0B,mCCuF1ByB,GAjEkC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAAiB,EACrBrC,KAAjDR,EADsE,EACtEA,mBAAoBzB,EADkD,EAClDA,OAAQ6B,EAD0C,EAC1CA,iBAEhC3C,EAAiBrH,IAoBrB,OACE,qCACE,gBAAC,KAAD,CACE0M,OAAQ,KACR9B,MAAM,qBACN+B,UAAQ,EACRC,QAASJ,EACTK,UAAU,EALZ,UAOE,uBAAK7F,UAAU,8BAAf,UACE,sBAAKA,UAAU,gCAAf,SACE,eAAC,KAAD,CACE8F,KAAM,GACNhG,MAAO,CAAEiG,cAAe,SAAUC,OAAQ,kBAC1CpB,IAAKJ,GAAgBrD,EAAOL,UAAU/D,OAAOsC,gBAIjD,uBAAKW,UAAU,qCAAf,UACE,8BAAKmB,EAAOL,UAAUlE,SAASwI,gBAC/B,uBAAKpF,UAAU,6BAAf,UACE,sBACE4E,IAAKqB,GACLjG,UAAU,oBACV8E,IAAI,qBAEN,8BAAK3D,EAAOL,UAAUjE,oBAK5B,uBAAKmD,UAAU,sBAAf,UACE,yBAAQkF,QAzCG,WACjBO,IACAzC,EACE7B,EAAOC,QAAQ/B,WACf8B,EAAOL,UAAUrE,GAAG4C,aAqCaW,UAAU,mBAAvC,qBACA,yBAAQkF,QAnDK,WACnBO,IACA7C,EACEvC,EAAOjH,IAAIiG,WACX8B,EAAOC,QAAQ/B,WACf8B,EAAOL,UAAUrE,GAAG4C,aA8CeW,UAAU,qBAAzC,8BClBKkG,I,qBAtC4B,SAAC,GAQrC,IAPLC,EAOI,EAPJA,KACApJ,EAMI,EANJA,OACAH,EAKI,EALJA,SACAC,EAII,EAJJA,SACAJ,EAGI,EAHJA,GACA2J,EAEI,EAFJA,UACAC,EACI,EADJA,aAEA,OACI,uBAAKrG,UAAU,qBAAf,UACE,sBAAKA,UAAU,eAAf,SAA+BmG,IAE/B,uBAAKnG,UAAU,gBAAf,UACE,uBAAKA,UAAU,2BAAf,UACE,eAAC,KAAD,CACEF,MAAO,CAACiG,cAAe,SAAUC,OAAQ,kBACzCpB,IAAKJ,GAAgBzH,EAAOsC,YAC5ByG,KAAK,UAEP,iCACA,8BAAKlJ,EAASwI,gBACZ,uBAAKpF,UAAU,oBAAf,UACE,sBACE4E,IAAKqB,GACLjG,UAAU,uBACV8E,IAAI,qBAEN,6BAAIjI,aAIV,yBAAQqI,QAAS,WAAQkB,EAAU3J,GAAK4J,KAAiBrG,UAAU,wBAAnE,8BCDKsG,GAtC2B,SAAC,GAA4C,IAA3CF,EAA0C,EAA1CA,UAAWG,EAA+B,EAA/BA,YAAaF,EAAkB,EAAlBA,aAAkB,EAEpDxO,IAAM2O,SAAS,IAFqC,mBAE7EC,EAF6E,KAEnEC,EAFmE,KAgBpF,OAPA7O,IAAM8O,WAAU,WAEdP,EAAUK,KAET,CAACA,IAIF,uBAAKzG,UAAU,qBAAf,UACE,sBAAKA,UAAU,oBAEf,sBAAKA,UAAU,oBAAf,SACKuG,EAAYK,KAAI,SAACpG,EAAS9H,GAAV,OACb,eAAC,GAAD,CAEEyN,KAAMzN,EAAG,EACTqE,OAAQyD,EAAQqG,cAChBjK,SAAU4D,EAAQsG,gBAClBjK,SAAU2D,EAAQuG,gBAClBtK,GAAI+D,EAAQwG,UACZX,aAAcA,EACdD,UAAWM,GAPNlG,EAAQwG,oBC0BdC,GA9C+C,SAAC,GAA+B,IAA7BzB,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAClE9C,EAAgBS,KAAhBT,YACA3F,EAAkBuB,KAAlBvB,cAFmF,EAI3DnF,IAAM2O,SAAS,IAJ4C,mBAIpFC,EAJoF,KAI1EC,EAJ0E,OAMzD7O,IAAM2O,SAAShB,GAN0C,mBAMpF0B,EANoF,KAMzEC,EANyE,KAQvF9G,EAAiBrH,IAErBnB,IAAM8O,WAAU,WAEZQ,IADE3B,KAKH,CAACA,IAEJ3N,IAAM8O,WAAU,WACXF,IACD9D,EAAYtC,EAAOjH,IAAIiG,WAAYoH,GACnChB,OAGD,CAACgB,IAOJ,OACE,qCACE,eAAC,KAAD,CACE7C,MAAM,oBACN8B,OAAQ,KACRG,UAAU,EACVD,QAASsB,EACTE,SAAU3B,EALZ,SAOE,eAAC,GAAD,CAAUW,UAAWM,EAAaH,YAAavJ,EAAc2H,QAAO,SAAC0C,GAAD,OAAYA,EAAOL,WAAa3G,EAAOjH,OAAMiN,aAd/F,WACtBK,EAAYD,W,mBC3CD,SAASa,KACtB,IAAMC,EAA8B,qBAAX9R,OAEzB,SAAS+R,IAGP,MAAO,CACLC,MAHYhS,OAAOiS,WAInBC,OAHalS,OAAOmS,aALoB,MAYIpB,mBAC9CgB,KAb0C,mBAYrCK,EAZqC,KAYnBC,EAZmB,KA2B5C,OAXAnB,qBAAU,WACR,GAAIY,EAAW,CACb,IAAMQ,EAAe,WACnBD,EAAoBN,MAItB,OADA/R,OAAOuS,iBAAiB,SAAUD,GAC3B,kBAAMtS,OAAOwS,oBAAoB,SAAUF,OAEnD,CAACR,IAEGM,ECTT,IAwCeK,GAxC2C,SAAC,GAAiC,IAA/BjD,EAA8B,EAA9BA,WAAYkD,EAAkB,EAAlBA,YAC7DtK,EAAqBU,KAArBV,iBAD+E,EAGzDhG,IAAM2O,SAASvB,GAH0C,mBAGhFW,EAHgF,KAGvEwC,EAHuE,KAKvFvQ,IAAM8O,WAAU,WAERyB,IADAnD,KAKL,CAACA,IAEJ,IAKQwC,EAAUH,KAAVG,MAER,OACI,eAAC,KAAD,CACIE,OAAQF,GAAS,IAAM,IAAM,IAC7B7D,MAAM,qBACN3D,UAAW,SACX4F,UAAU,EACVD,QAASA,EACTpC,QAAS2E,EANb,SAQI,sBAAKnI,UAAU,yBAAf,SACK0E,GAAQA,QAAQkC,KAAI,SAAA7J,GAAM,OACvB,sBAAqB6H,IAAK7H,EAAO6H,IAAKE,IAAI,eAAeI,QAAS,kBAlB5D/G,EAkB+EpB,EAAON,GAAG4C,WAjB3GxB,EAAiBM,QACjBgK,IAFiB,IAAChK,IAkBIpB,EAAON,YCGtByJ,I,qBAnC4B,SAAC,GAMrC,IALLC,EAKI,EALJA,KAEApJ,GAGI,EAJJN,GAII,EAHJM,QACAH,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,uBAAKmD,UAAU,qBAAf,UACE,sBAAKA,UAAU,eAAf,SAA+BmG,IAE/B,sBAAKnG,UAAU,gBAAf,SACE,uBAAKA,UAAU,2BAAf,UACE,eAAC,KAAD,CACEF,MAAO,CAAEiG,cAAe,SAAUC,OAAQ,kBAC1CpB,IAAKJ,GAAgBzH,EAAOsC,YAC5ByG,KAAK,UAEP,iCACE,8BAAKlJ,EAASwI,gBACd,uBAAKpF,UAAU,oBAAf,UACE,sBACE4E,IAAKqB,GACLjG,UAAU,uBACV8E,IAAI,qBAEN,6BAAIjI,oBCXHyJ,GArB2B,SAAC,GAAiB,IAAf9F,EAAc,EAAdA,QAC3C,OACE,uBAAKR,UAAU,qBAAf,UACE,sBAAKA,UAAU,oBAEf,sBAAKA,UAAU,oBAAf,SACKQ,EAAQoG,KAAI,SAACpG,EAAS9H,GAAV,OACT,eAAC,GAAD,CAEEyN,KAAM,EAAIzN,EACVqE,OAAQyD,EAAQqG,cAChBjK,SAAU4D,EAAQsG,gBAClBjK,SAAU2D,EAAQuG,gBAClBtK,GAAI+D,EAAQwG,WALPxG,EAAQwG,oBCrBd,OAA0B,oCCA1B,OAA0B,oCCA1B,OAA0B,oCCwI1BC,GA/G8C,SAAC,GAA+B,IAA7BzB,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAAiB,EAClDlH,KAAhCpB,EADkF,EAClFA,YAAaW,EADqE,EACrEA,eADqE,EAGxDjG,IAAM2O,SAAShB,GAHyC,mBAGxE2B,GAHwE,aAI9DtP,IAAM2O,SAAoB,IAJoC,mBAInF6B,EAJmF,KAI3EC,EAJ2E,OAKpCzQ,IAAM2O,SAAoB,IALU,mBAKnF+B,EALmF,KAK9DC,EAL8D,KAOrExP,IAoBrB,OAlBAnB,IAAM8O,WAAU,WAEZQ,IADE3B,KAIH,CAACA,IAEJ3N,IAAM8O,WAAU,WACd7I,MACC,IAEHjG,IAAM8O,WAAU,WACVxJ,IACFmL,EAAUnL,EAAYsL,MAAM,EAAG,IAC/BD,EAAuBrL,EAAYsL,MAAM,OAE1C,CAACtL,IAGF,qCACE,gBAAC,KAAD,CACEyG,MAAM,cACN8B,OAAQ,KACRG,UAAU,EACVD,UAASJ,EACT4B,SAAU3B,EALZ,UAOE,uBAAKzF,UAAU,mBAAf,UACE,uBAAKA,UAAU,kCAAf,UACE,eAAC,KAAD,CACEF,MAAO,CAAEiG,cAAe,SAAUC,OAAQ,kBAC1CpB,IAAKJ,GAAgB6D,EAAO1P,OAAS,EAAI0P,EAAO,GAAGxB,cAAcxH,WAAa,KAC9EyG,KAAK,UAEP,8BAAKuC,EAAO1P,OAAS,EAAI0P,EAAO,GAAGvB,gBAAgB1B,cAAgB,MAEnE,uBAAKpF,UAAU,iCAAf,UACE,sBACE4E,IAAKqB,GACLjG,UAAU,oCACV8E,IAAI,gBAEN,6BAAIuD,EAAO1P,OAAS,EAAI0P,EAAO,GAAGtB,gBAAkB,SAEtD,sBACInC,IAAK8D,GACL1I,UAAU,8BACV8E,IAAI,mBAGV,uBAAK9E,UAAU,kCAAf,UACE,eAAC,KAAD,CACEF,MAAO,CAAEiG,cAAe,SAAUC,OAAQ,kBAC1CpB,IAAKJ,GAAgB6D,EAAO1P,OAAS,EAAI0P,EAAO,GAAGxB,cAAcxH,WAAa,KAC9EyG,KAAM,KAER,8BAAKuC,EAAO1P,OAAS,EAAI0P,EAAO,GAAGvB,gBAAgB1B,cAAgB,MACnE,uBAAKpF,UAAU,iCAAf,UACE,sBACE4E,IAAKqB,GACLjG,UAAU,oCACV8E,IAAI,gBAEN,6BAAIuD,EAAO1P,OAAS,EAAI0P,EAAO,GAAGtB,gBAAkB,SAEtD,sBACInC,IAAK+D,GACL3I,UAAU,8BACV8E,IAAI,mBAGV,uBAAK9E,UAAU,kCAAf,UACE,eAAC,KAAD,CACEF,MAAO,CAAEiG,cAAe,SAAUC,OAAQ,kBAC1CpB,IAAKJ,GAAgB6D,EAAO1P,OAAS,EAAI0P,EAAO,GAAGxB,cAAcxH,WAAa,KAC9EyG,KAAK,UAEP,8BAAKuC,EAAO1P,OAAS,EAAI0P,EAAO,GAAGvB,gBAAgB1B,cAAgB,MACnE,uBAAKpF,UAAU,iCAAf,UACE,sBACE4E,IAAKqB,GACLjG,UAAU,oCACV8E,IAAI,gBAEN,6BAAIuD,EAAO1P,OAAS,EAAI0P,EAAO,GAAGtB,gBAAkB,SAEtD,sBACInC,IAAKgE,GACL5I,UAAU,8BACV8E,IAAI,sBAKZ,sBAAK9E,UAAU,uBAAf,SACE,eAAC,GAAD,CAAUQ,QAAS+H,YCjId,OAA0B,mCCA1B,OAA0B,mCCA1B,OAA0B,qCCA1B,OAA0B,mCCoH1BM,GAxFF,WAAO,IAAD,EAUbtK,KARF3B,EAFe,EAEfA,SACAE,EAHe,EAGfA,MACAD,EAJe,EAIfA,SACAE,EALe,EAKfA,OACAU,EANe,EAMfA,YACAF,EAPe,EAOfA,OACAK,EARe,EAQfA,cACAD,EATe,EASfA,iBAGMuD,EAAmBkC,KAAnBlC,eAZS,EAcoBrJ,IAAM2O,SAAShC,GAAgBzH,IAdnD,mBAcT+L,EAdS,KAcGC,EAdH,OAeiDlR,IAAM2O,UAAS,GAfhE,mBAeVwC,EAfU,KAeiBC,EAfjB,OAgBmDpR,IAAM2O,UAAS,GAhBlE,mBAgBV0C,EAhBU,KAgBkBC,EAhBlB,OAiB6CtR,IAAM2O,UAAS,GAjB5D,mBAiBV4C,EAjBU,KAiBeC,EAjBf,OAkB+CxR,IAAM2O,UAAS,GAlB9D,mBAkBV8C,EAlBU,KAkBgBC,EAlBhB,KAoBblJ,EAAiBrH,IAErBnB,IAAM8O,WAAU,WACdlJ,EAAY4C,EAAOjH,IAAIiG,YACvBzB,MACC,IAEH/F,IAAM8O,WAAU,WACVzF,GAAgBqI,GAA4B,KAC/C,CAACrI,IAEJrJ,IAAM8O,WAAU,WACX5J,GAAQgM,EAAcvE,GAAgBzH,MACxC,CAACA,IAEJ,IAAMyM,EAAiB,WACrB7L,IACAsL,GAA6B,IAG/B,OACE,uBAAKjJ,UAAU,sBAAf,UAEE,eAAC,GAAD,CAAoBiF,WAAYiE,EAA4Bf,YAAa,kBAAMgB,GAA8B,MAE5GG,GACC,eAACG,GAAD,CAAkBjE,UAAW8D,EAA0B7D,WAAY,kBAAM8D,GAA4B,MAGtGP,GACC,eAAC,GAAD,CAAoBxD,UAAWwD,EAA2BvD,WAAY,kBAAMwD,GAA6B,MAG1GG,GACC,eAACM,GAAD,CAAkBlE,UAAW4D,EAAyB3D,WAAY,kBAAM4D,GAA2B,MAGrG,uBAAKrJ,UAAU,kBAAf,UACE,uBAAKA,UAAU,0BAAf,UACE,sBAAKF,MAAO,CAAC6J,YAAa,QAA1B,SACE,eAAC,GAAD,CAAS7F,KAAMhH,EAAO8C,KAAMgK,OAE9B,eAAC,GAAD,CAAS9F,KAAMjH,EAAU+C,KAAMqG,QAGjC,sBAAKjG,UAAU,qCAAf,SACE,sBAAK4E,IAAKiF,GAAc7J,UAAU,+BAA+B8E,IAAI,2BAGvE,sBAAK9E,UAAU,mCAAmCkF,QAAS,SAAC3F,GAAOA,EAAEuK,kBAAmBT,GAA2B,IAAnH,SACE,sBAAKzE,IAAKmF,GAAY/J,UAAU,6BAA6B8E,IAAI,2BAGnE,sBAAKF,IAAKoF,GAAY9E,QAAS,kBAAM3H,EAAO8C,EAAOjH,IAAIiG,aAAaW,UAAU,yBAAyB8E,IAAI,mBAG7G,eAAC,GAAD,CAAiBE,UAAW8D,EAAYlM,SAAUA,EAAUqI,WAAY,kBAAMkE,GAA8B,MAE5G,uBAAKnJ,UAAU,mBAAf,UACE,sBAAKA,UAAU,0BAAf,SACE,eAAC,GAAD,CAAY8D,KAAK,kBAAkBwB,YAAa,kBAAMkE,SAExD,eAAC,GAAD,CAAY1F,KAAK,kBAAkBwB,YAAa,kBAAMkE,c,iDC5C/CS,GAvDD,WAAO,IAEX5M,EAAUkB,KAAVlB,MAUR,OACE,uBAAK2C,UAAU,kBAAf,UAEE,sBAAKA,UAAU,eAAf,SACE,2CAGF,sBAAKA,UAAU,aAAf,SACE,gBAAC,KAAD,CACE3H,KAAK,QACL6R,SAlBS,SAACnL,GAChB1B,EAAM0B,IAeF,UAIE,eAAC,KAAKoL,KAAN,CACE9R,KAAK,WACL+R,MAAO,CAAC,CAAEC,UAAU,EAAMjM,QAAS,sCAFrC,SAIE,eAAC,KAAD,CAAOkM,YAAY,aAAUC,OAAQ,eAACC,GAAA,EAAD,IAAkB1E,KAAK,YAG9D,eAAC,KAAKqE,KAAN,CACE9R,KAAK,WACL+R,MAAO,CAAC,CAAEC,UAAU,EAAMjM,QAAS,iCAFrC,SAIE,eAAC,KAAMqM,SAAP,CAAgB3E,KAAK,QAAQwE,YAAY,QAAQC,OAAQ,eAACG,GAAA,EAAD,QAG3D,eAAC,KAAKP,KAAN,UACE,sBAAKnK,UAAU,+CAAf,SACI,yBAAQA,UAAU,qCAAlB,4BAMV,sBAAKA,UAAU,eAAf,SACE,yBAAQA,UAAU,wBAAwBkF,QAvC9B,WAChB3L,EAAQ+F,KAAK,cAsCT,sDCWOqL,I,OA3DE,WAAO,IAAD,EAEYpM,KAAzBnB,EAFa,EAEbA,WAFa,EAEDH,SAUpB,OACE,uBAAK+C,UAAU,qBAAf,UAEE,sBAAKA,UAAU,kBAAf,SACE,2CAGF,sBAAKA,UAAU,gBAAf,SACE,gBAAC,KAAD,CACE3H,KAAK,QACL6R,SAlBS,SAACnL,GAChB3B,EAAW2B,IAeP,UAIE,eAAC,KAAKoL,KAAN,CACE9R,KAAK,OACL+R,MAAO,CAAC,CAAEC,UAAU,EAAMjM,QAAS,gCAFrC,SAIE,eAAC,KAAD,CAAOkM,YAAY,OAAOC,OAAQ,eAACC,GAAA,EAAD,IAAkB1E,KAAK,YAE3D,eAAC,KAAKqE,KAAN,CACE9R,KAAK,WACL+R,MAAO,CAAC,CAAEC,UAAU,EAAMjM,QAAS,sCAFrC,SAIE,eAAC,KAAD,CAAOkM,YAAY,aAAUC,OAAQ,eAACC,GAAA,EAAD,IAAkB1E,KAAK,YAG9D,eAAC,KAAKqE,KAAN,CACE9R,KAAK,WACL+R,MAAO,CAAC,CAAEC,UAAU,EAAMjM,QAAS,iCAFrC,SAIE,eAAC,KAAMqM,SAAP,CAAgB3E,KAAK,QAAQwE,YAAY,QAAQC,OAAQ,eAACG,GAAA,EAAD,QAG3D,eAAC,KAAKP,KAAN,UACE,sBAAKnK,UAAU,kCAAf,SACI,yBAAQA,UAAU,wBAAlB,kCAMV,sBAAKA,UAAU,kBAAf,SACE,yBAAQkF,QA7CC,WACb3L,EAAQ+F,KAAK,WA4CiBU,UAAU,wBAApC,sDC/DO,I,OAAA,IAA0B,kCCA1B,OAA0B,kC,mDCkN1B4K,GA3LD,WAAO,IAAD,EAOdxH,KALFtC,EAFgB,EAEhBA,UACAC,EAHgB,EAGhBA,aACA8B,EAJgB,EAIhBA,aACA5B,EALgB,EAKhBA,cACAyB,EANgB,EAMhBA,aAGMtB,EAAYyJ,eAAZzJ,QATU,EAW8BvJ,IAAM2O,UAAS,GAX7C,mBAWXsE,EAXW,KAWOC,EAXP,OAYkBlT,IAAM2O,UAAS,GAZjC,mBAYXwE,EAZW,KAYCC,EAZD,OAa0BpT,IAAM2O,UAAS,GAbzC,mBAaX0E,EAbW,KAaKC,EAbL,OAcoCtT,IAAM2O,SAAS,CACnE5J,SAAU,GACVvE,KAAM,GACN0E,OAAQ,EACRF,SAAU,IAlBM,mBAcXuO,EAdW,KAcUC,EAdV,KAsBlBxT,IAAM8O,WAAU,WACU,IAApB5F,EAAatE,KACfsO,GAAoB,GAEpBM,EAAuB,CACrBzO,SAAUmE,EAAanE,SACvBvE,KAAM0I,EAAa1I,KACnBwE,SAAUkE,EAAalE,SACvBE,OAAQgE,EAAahE,YAGxB,CAACgE,IAGJlJ,IAAM8O,WAAU,WACV1F,GACFkK,GAAkB,KAEnB,CAAClK,IAEJ,IAKMqK,EAAwB,CAC5BC,MAAM,EACNC,UAAU,EACVC,cAAeC,GACfC,iBAAkB,CAChBC,oBAAqB,mBAInBC,EAAyB,CAC7BN,MAAM,EACNC,UAAU,EACVC,cAAeK,GACfH,iBAAkB,CAChBC,oBAAqB,mBAInBG,EAAsC,CAC1CR,MAAM,EACNC,UAAU,EACVC,cAAeO,GACfL,iBAAkB,CAChBC,oBAAqB,mBAIzB,OACE,uBAAK5L,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,SACE,sBACE4E,IAAKqH,GACLjM,UAAU,kBACV8E,IAAI,uBAIR,uBAAK9E,UAAU,wBAAf,UACE,uBAAKA,UAAU,sBAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,eAAC,KAAD,CACE8F,KAAM,IACNhG,MAAO,CAAEiG,cAAe,SAAUC,OAAQ,kBAC1CpB,IAAK,IAAMJ,GAAgB1D,EAAU/D,OAAOsC,cAG7C2L,GACD,sBAAKhL,UAAU,8BAAf,SACE,sBAAK4E,IAAKsH,GAAWlM,UAAU,mBAAmB8E,IAAI,qBAK1D,uBAAK9E,UAAU,mBAAf,UACE,8BAAKc,EAAUzI,KAAK+M,gBACpB,oCAAMtE,EAAUlE,YAChB,uBAAKoD,UAAU,uBAAf,UACE,sBACE4E,IAAKqB,GACLjG,UAAU,oBACV8E,IAAI,qBAEN,6BAAIhE,EAAUjE,cAEhB,yBAAQmD,UAAU,qBAAqBkF,QArEhC,WACf+F,GAAc,GACdpI,EAAazB,IAmEqD+K,SAAUnB,EAApE,0BAMJ,uBAAKhL,UAAU,gBAAf,UACE,qBAAIA,UAAU,uBACd,uBAAKA,UAAU,+BAAf,WACI8K,GACA,eAAC,KAAD,CACEsB,QAASd,EACTxL,MAAO,CACL6H,OAAQ,IACR0E,WAAY,KAIjBvB,IAAqBpI,GACpB,eAAC,KAAD,CACE0J,QAASP,EACT/L,MAAO,CACL6H,OAAQ,IACR0E,WAAY,KAIjBvB,GAAoBpI,GACnB,eAAC,KAAD,CACE0J,QAASL,EACTjM,MAAO,CACL6H,OAAQ,IACR0E,YAAa,YAMrBvB,GACA,qBAAI9K,UAAU,gBAAd,wCAED8K,GACC,uBAAK9K,UAAU,yBAAf,UACE,uBAAKA,UAAU,sBAAf,UACE,8BAAKoL,EAAoB/S,KAAK+M,gBAC9B,oCAAMgG,EAAoBxO,YAC1B,uBAAKoD,UAAU,uBAAf,UACE,sBACE4E,IAAKqB,GACLjG,UAAU,oBACV8E,IAAI,qBAEN,6BAAIsG,EAAoBvO,iBAG5B,uBAAKmD,UAAU,wBAAf,UACE,eAAC,KAAD,CACE8F,KAAM,IACNhG,MAAO,CAAEiG,cAAe,SAAUC,OAAQ,kBAC1CpB,IAAK,IAAMJ,GAAgB4G,EAAoBrO,OAAOsC,cAEvD6L,GACC,sBAAKlL,UAAU,iCAAf,SACE,sBAAK4E,IAAKsH,GAAWlM,UAAU,mBAAmB8E,IAAI,+BC1FzDwH,I,qBAxFoC,SAAC,GAW7C,IAVLxI,EAUI,EAVJA,KACAS,EASI,EATJA,SACAgI,EAQI,EARJA,SACAC,EAOI,EAPJA,WACAvK,EAMI,EANJA,cACAC,EAKI,EALJA,iBACAuK,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eACI,EACgC/U,IAAM2O,SAASkG,GAD/C,gCAE4B7U,IAAM2O,UAAS,IAF3C,mBAEGqG,EAFH,KAEaC,EAFb,OAGsCjV,IAAM2O,UAAS,GAHrD,mBAGG1E,EAHH,KAGkBiL,EAHlB,OAIkDlV,IAAM2O,UAAS,GAJjE,mBAIGwG,EAJH,KAIwBC,EAJxB,OAKwDpV,IAAM2O,UAAS,GALvE,mBAKG0G,EALH,KAK2BC,EAL3B,KAOJtV,IAAM8O,WAAU,WAYd,OAXIpC,IAAakI,GACfM,GAAiB,GAEf9K,IAAkBsC,GACpB0I,GAAuB,GAErB/K,IAAqBqC,GACvB4I,GAA0B,GAE5BxW,QAAQC,IAAI8V,GAEJ,WACNK,GAAiB,GACjBE,GAAuB,GACvBE,GAA0B,MAG3B,CAACT,IAMJ,OACE,uBAAK1M,UAAU,0BAAf,UACE,yBACEA,UACE0M,GAAY5K,EAEV,+BAEA4K,IAAa5K,EAEX,6BAEC4K,GAAaG,EAGZ,uCAFA,iBAIR3H,QAAS,WAAQqH,IApBrBO,GAAY,IAqBRX,SAAUK,EAhBZ,SAkBG1I,IAGFkJ,GAAuBN,GACtB,sBAAK1M,UAAU,sBAAf,SACE,eAAC,KAAD,CACE8F,KAAM,GACNhG,MAAO,CAAEiG,cAAe,SAAUC,OAAQ,kBAC1CpB,IAAK+H,MAKVO,GAA0BR,GACzB,sBAAK1M,UAAU,yBAAf,SACE,eAAC,KAAD,CACE8F,KAAM,GACNhG,MAAO,CAAEiG,cAAe,SAAUC,OAAQ,kBAC1CpB,IAAKgI,WCCFQ,GAnFF,WAAO,IAAD,EAQbhK,KANFxC,EAFe,EAEfA,IACAa,EAHe,EAGfA,MACAO,EAJe,EAIfA,YACAlB,EALe,EAKfA,UACAC,EANe,EAMfA,aACA+B,EAPe,EAOfA,eAPe,EAUuCjL,IAAM2O,UAAS,GAVtD,mBAUV6G,EAVU,KAUYC,EAVZ,KAYXC,EAAiB1V,IAAM2V,aAAY,SAACjJ,GACxC+I,GAAwB,GACxBxK,EACEwB,SAAS1D,GACTa,EAAMC,WACN6C,EACA9C,EAAMK,iBAEP,CAAEE,EAAYC,cAAeD,EAAYE,mBAEpCuF,EAAUH,KAAVG,MAGR,OACE,uBAAKzH,UAAU,iBAAf,UACE,uBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,SAAuCyB,EAAMM,YAE7C,uBAAK/B,UAAU,yBAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,eAAC,KAAD,CACE8F,KAAM2B,GAAS,IAAM,GAAK,GAC1B3H,MAAO,CAACiG,cAAe,SAAUC,OAAQ,kBACzCpB,IAAK,IAAMJ,GAAgB1D,EAAU/D,OAAOsC,cAE9C,uBAAKW,UAAU,0BAAf,UACE,8BAAKc,EAAUlE,WACf,6BAAIoF,EAAYG,WAAaH,EAAYG,WAAa,YAG1D,uBAAKnC,UAAU,wBAAf,UACE,eAAC,KAAD,CACE8F,KAAM2B,GAAS,IAAM,GAAK,GAC1B3H,MAAO,CAACiG,cAAe,SAAUC,OAAQ,kBACzCpB,IAAK,IAAMJ,GAAgBzD,EAAahE,OAAOsC,cAEjD,uBAAKW,UAAU,6BAAf,UACE,8BAAKe,EAAanE,WAClB,6BAAIoF,EAAYI,cAAgBJ,EAAYI,cAAgB,kBAMpE,uBAAKpC,UAAU,wBAAf,UACE,sBAAKA,UAAU,0BAAf,SACE,8BAAKyB,EAAME,iBAGb,sBAAK3B,UAAU,yBAAf,SACGyB,EAAMI,QAAQ+E,KAAI,SAACzC,GAAD,OACjB,eAAC,GAAD,CAEEL,KAAMK,EAAOL,KACbS,SAAUJ,EAAO1H,GACjB8P,SAAU,kBAAMgB,EAAepJ,EAAO1H,KACtC+P,WAAYa,EACZpL,cAAeD,EAAYC,cAC3BC,iBAAkBF,EAAYE,iBAC9BuK,UAAWhL,EAAMK,cACjB4K,SAAUjL,EAAMG,kBAChB+K,YAAa,IAAMnI,GAAgB1D,EAAU/D,OAAOsC,YACpDuN,eAAgB,IAAMpI,GAAgBzD,EAAahE,OAAOsC,aAVrD8E,EAAO1H,gBC9DXgR,I,OAVoC,SAAC,GAAiC,IAAhCnM,EAA+B,EAA/BA,aAAcoM,EAAiB,EAAjBA,YACjE,OACE,uBAAK1N,UAAU,0BAAf,UACE,0CAAYsB,KACZ,oCAAMA,EAAN,OAAwBoM,UC4BfC,GA9BF,WAAO,IACVtM,EAAS+B,KAAT/B,KADS,EAG+BxJ,IAAM2O,UAAS,GAH9C,mBAGThF,EAHS,KAGQoM,EAHR,OAI6B/V,IAAM2O,UAAS,GAJ5C,mBAITqH,EAJS,KAIOC,EAJP,KAqBjB,OAfAjW,IAAM8O,WAAU,YAEc,IAAzBtF,EAAKG,iBACNsM,GAAkB,GAClBF,GAAmB,KAGnBA,GAAmB,GACnBE,GAAkB,IAGpBnX,QAAQC,IAAIyK,KAEX,CAACA,IAGF,uBAAKrB,UAAU,iBAAf,UACCwB,GAAmB,eAAC,GAAD,CAAcF,aAAcD,EAAKC,aAAcoM,YAAarM,EAAKE,aAEpFsM,GAAkB,eAAC,GAAD,QCpCR,I,OAAA,IAA0B,sCCA1B,OAA0B,uCCA1B,OAA0B,yCCmH1BE,GA1FI,WAAO,IAAD,EAMjB3K,KAJAtC,EAFiB,EAEjBA,UACAC,EAHiB,EAGjBA,aACAsB,EAJiB,EAIjBA,YACAU,EALiB,EAKjBA,WAGI0E,EAAUH,KAAVG,MARa,EAUO5P,IAAM2O,SAASnE,EAAYC,MAAME,QAVxC,mBAUdA,EAVc,aAWG3K,IAAM2O,UAAUnE,EAAYC,MAAME,QAAUH,EAAYI,SAASD,SAXpE,mBAWdwL,EAXc,aAYGnW,IAAM2O,UAAUnE,EAAYC,MAAME,SAAWH,EAAYI,SAASD,SAZrE,mBAYdyL,EAZc,UAcrB,OACI,uBAAKjO,UAAU,mBAAf,UACI,uBAAKA,UAAU,mBAAf,UACI,uBAAKA,UAAU,kBAAf,UAEKwC,GACG,uCACI,sBAAKoC,IAAKsJ,GAAgBlO,UAAU,cAAc8E,IAAI,kBACtD,sDAIPkJ,GACG,uCACI,sBAAKpJ,IAAKuJ,GAAkBnO,UAAU,cAAc8E,IAAI,oBACxD,sDAIPmJ,GACG,uCACI,sBAAKrJ,IAAKwJ,GAAiBpO,UAAU,cAAc8E,IAAI,sBACvD,iDAMZ,uBAAK9E,UAAU,iBAAf,UACI,uBAAKA,UAAU,sBAAf,UACI,uBAAKA,UAAU,2BAAf,UACI,eAAC,KAAD,CACI8F,KAAM2B,GAAS,IAAM,GAAK,IAC1B3H,MAAO,CAACkG,OAAQ,iBAAkBD,cAAe,SAAUsI,aAAc,QACzEzJ,IAAK,IAAMJ,GAAgB1D,EAAU/D,OAAOsC,cAEhD,8BAAKyB,EAAYA,EAAUlE,SAASwI,cAAgB,KACpD,6BAAI/C,EAAcA,EAAYC,MAAMC,MAAQ,OAGhD,uBAAKvC,UAAU,4BAAf,UACI,uBAAKA,UAAU,4BAAf,UACI,sBAAK4E,IAAKqB,GAAYjG,UAAU,gBAAgB8E,IAAI,kBACpD,8BAAKmJ,EAAO,IAAMzL,EAAS,MAAQ,UAGvC,uBAAKxC,UAAU,wBAAf,UACI,sBAAK4E,IAAKgF,GAAU5J,UAAU,gBAAgB8E,IAAI,eAClD,8BAAKmJ,EAAO,IAAMzL,EAAS,MAAQ,iBAK/C,uBAAKxC,UAAU,yBAAf,UACI,eAAC,KAAD,CACI8F,KAAM2B,GAAS,IAAM,GAAK,IAC1B3H,MAAO,CAAEkG,OAAQ,iBAAkBD,cAAe,SAAUsI,aAAc,QAC1EzJ,IAAK,IAAMJ,GAAgBzD,EAAahE,OAAOsC,cAEnD,8BAAK0B,EAAeA,EAAanE,SAASwI,cAAgB,KAC1D,6BAAI/C,EAAcA,EAAYI,SAASF,MAAQ,aAQ3D,sBAAKvC,UAAU,wBAAf,SACI,yBAAQkF,QAASnC,EAAY/C,UAAU,cAAvC,wB,UChFDsO,GAdQ,SAACC,GAA+B,IACnCC,EAAuBD,EAAlCE,UAAyBC,EADoB,aACXH,EADW,eAGpD,OACE,eAAC,KAAD,2BAAWG,GAAX,IAAiBC,OAAQ,SAAAJ,GAAK,MACH,IAAvBpW,EAAU,UACJ,eAACqW,EAAD,eAAeD,IACf,eAAC,KAAD,CAAUK,GAAI,CAAEC,SAAU,SAAUpY,MAAO,CAAEqY,KAAMP,EAAM7Y,kBCcxDqZ,GApBA,WAEb,OACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOC,KAAK,SAASP,UAAWQ,KAChC,eAAC,KAAD,CAAOD,KAAK,YAAYP,UAAWS,KAEnC,eAAC,GAAD,CAAgBC,OAAK,EAACH,KAAK,IAAIP,UAAWW,KAE1C,eAAC,GAAD,CAAgBD,OAAK,EAACH,KAAK,kBAAkBP,UAAWY,KACxD,eAAC,GAAD,CAAgBF,OAAK,EAACH,KAAK,QAAQP,UAAWa,KAC9C,eAAC,GAAD,CAAgBH,OAAK,EAACH,KAAK,UAAUP,UAAWV,SCRtDwB,IAASZ,OACP,eAAC,IAAMa,WAAP,UACE,eAAC,KAAD,CAAQjW,QAASA,EAAjB,SACE,eAAC3B,EAAc6I,SAAf,CAAwBC,MAAOjJ,EAA/B,SACE,eAAC,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,cAMVc,SAASkX,eAAe,SrDLnB,SAAkB1Z,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI0Z,IAAIC,GAAwBla,OAAOC,SAASka,MACpDC,SAAWpa,OAAOC,SAASma,OAIvC,OAGFpa,OAAOuS,iBAAiB,QAAQ,WAC9B,IAAMlS,EAAK,UAAM6Z,GAAN,sBAEPpa,IAgEV,SAAiCO,EAAeC,GAE9C+Z,MAAMha,EAAO,CACXia,QAAS,CAAE,iBAAkB,YAE5B5Z,MAAK,SAACqJ,GAEL,IAAMwQ,EAAcxQ,EAASuQ,QAAQ3P,IAAI,gBAEnB,MAApBZ,EAASyQ,QACO,MAAfD,IAA8D,IAAvCA,EAAYlX,QAAQ,cAG5C9C,UAAUC,cAAcia,MAAM/Z,MAAK,SAACC,GAClCA,EAAa+Z,aAAaha,MAAK,WAC7BV,OAAOC,SAAS0a,eAKpBva,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFVyZ,CAAwBva,EAAOC,GAI/BC,UAAUC,cAAcia,MAAM/Z,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OqDjB/Bua,GAKArZ,M","file":"static/js/main.ed494a96.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport socketio from \"socket.io-client\";\r\n\r\n//http://localhost:3001\r\nexport const socket: SocketIOClient.Socket = socketio.connect('/');\r\nexport const SocketContext = React.createContext(socket);\r\n","import axios from 'axios';\r\n\r\n\r\nconst BASE_URL: string = '/';\r\n\r\nexport const instance = axios.create({\r\n  baseURL: BASE_URL\r\n});\r\n\r\n\r\n\r\n","export function getCookie(cookieName: string): string {\r\n  let name = cookieName + \"=\";\r\n  let cookieArr = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookieArr.length; i++) {\r\n    let temp = cookieArr[i].trim();\r\n    if (temp.indexOf(name) == 0)\r\n      return temp.substring(name.length, temp.length);\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\nexport function deleteCookie(cookieName: string) {\r\n  document.cookie = cookieName + \"=; Max-Age=0\";\r\n}\r\n\r\n\r\n","import jwt_decode from \"jwt-decode\";\r\nimport { getCookie, deleteCookie } from \"./handleCookie\";\r\n\r\nexport interface IToken{\r\n  exp: number,\r\n  iat: number,\r\n  key: number\r\n}\r\n\r\nexport const getUserIdByToken = (): IToken => {\r\n  let user_id: IToken = {exp: 0, iat: 0, key: 0 };\r\n  let hasToken: string = getCookie(\"_token\");\r\n  if (hasToken) {\r\n    user_id = jwt_decode(hasToken);\r\n  }\r\n\r\n  return user_id;\r\n};\r\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n"," const SocketEvents = {\r\n  CLIENT_CONNECT: 'connect',\r\n  CLIENT_DISCONNECT: 'disconnect',\r\n  CLIENT_JOIN_MATCH: 'join:match',\r\n  CLIENT_UPDATE_STATUS: 'online:player',\r\n  CLIENT_LEAVE_MATCH: 'leave:match',\r\n  CLIENT_SET_READY: 'ready:match',\r\n  CLIENT_INVITE_PLAYER: 'invite:match',\r\n  CLIENT_DENY_INVITE: 'deny:invite',\r\n  CLIENT_ANSWER_QUESTION: 'answer:question',\r\n  CLIENT_USER_READY: 'user-ready:match',\r\n  \r\n\r\n  SERVER_SEND_INVITE: 'send:invite',\r\n  SERVER_PLAYER_DENIED_INVITE: 'denied-invite:match',\r\n\r\n  SERVER_PLAYER_JOINED: 'player-joined:match',\r\n  SERVER_PLAYER_READY: 'player-ready:match',\r\n  SERVER_PLAYER_LEFT: 'player-left:match',\r\n\r\n  SERVER_MATCH_START: 'start:match',\r\n  SERVER_MATCH_START_ROUND: 'start-round:match',\r\n  SERVER_MATCH_START_QUESTION: 'start-question:match',\r\n  SERVER_MATCH_COUNTDOWN: 'countdown:match',\r\n  SERVER_MATCH_END_ROUND: 'end-round:match',\r\n  SERVER_MATCH_END: 'end:match',\r\n  \r\n}\r\n\r\n\r\nexport default SocketEvents;\r\n","\r\n\r\n// match context\r\nexport const CREATE_MATCH: string = 'CREATE_MATCH';\r\nexport const JOIN_MATCH: string = 'JOIN_MATCH';\r\nexport const MATCH_READY: string = 'MATCH_READY';\r\nexport const SET_READY: string = 'SET_READY';\r\nexport const SET_OPPONENT_READY: string = 'SET_OPPONENT_READY';\r\nexport const SET_GAME: string = 'SET_GAME';\r\nexport const SET_ROUND: string = 'SET_ROUND';\r\nexport const START_MATCH: string = 'START_MATCH';\r\nexport const START_QUESTION: string = 'START_QUESTION';\r\nexport const ROUND_COUNTDOWN: string = 'ROUND_COUNTDOWN';\r\nexport const ROUND_RESULT: string = 'ROUND_RESULT';\r\nexport const MATCH_RESULT: string = 'MATCH_RESULT';\r\nexport const MATCH_END: string = 'MATCH_END';\r\n\r\n\r\nexport const HANDLE_INVITE: string = 'HANDLE_INVITE';\r\n\r\n// User context\r\nexport const CREATE_USER: string = 'CREATE_USER';\r\nexport const LOGIN: string = 'LOGIN';\r\nexport const UPDATE_USER: string = 'UPDATE_USER';\r\nexport const USER_PROFILE: string = 'USER_PROFILE';\r\nexport const LOGOUT: string = 'LOGOUT';\r\nexport const DELETE_USER: string = 'DELETE_USER'; \r\nexport const UPDATE_AVATAR: string = 'UPDATE_AVATAR'; \r\n\r\nexport const ONLINE_PLAYERS: string = 'ONLINE_PLAYERS'; \r\nexport const LEADERBOARD: string = 'LEADERBOARD'; \r\n\r\n\r\n// General\r\nexport const SET_ERROR: string = 'SET_ERROR'; \r\nexport const SET_LOADING: string = 'SET_LOADING';\r\n","import {\r\n  CREATE_USER,\r\n  LOGIN,\r\n  UPDATE_USER,\r\n  LOGOUT,\r\n  DELETE_USER,\r\n  USER_PROFILE,\r\n  ONLINE_PLAYERS,\r\n  SET_LOADING,\r\n  SET_ERROR,\r\n  UPDATE_AVATAR,\r\n  LEADERBOARD\r\n} from \"../types\";\r\nimport { Action, State } from \"./user.type\";\r\n\r\nimport { getCookie, deleteCookie } from \"../../utils/handleCookie\";\r\n\r\nlet hasToken: string = getCookie(\"_token\");\r\n\r\nexport const initialState: State = {\r\n  id: \"\",\r\n  isLoggedIn: hasToken ? true : false,\r\n  socketID: \"\",\r\n  name: \"\",\r\n  username: \"\",\r\n  trophies: \"\",\r\n  coins: \"\",\r\n  avatar: \"\",\r\n  onlinePlayers: [],\r\n  errorMsg: \"\",\r\n  loading: false,\r\n  leaderboard: [],\r\n\r\n  createUser: () => null,\r\n  login: () => null,\r\n  updateUser: () => null,\r\n  logout: () => null,\r\n  deleteUser: () => null,\r\n  userProfile: () => null,\r\n  setLoading: () => null,\r\n  getOnlinePlayers: () => null,\r\n  setUserOnline: () => null,\r\n  updateUserAvatar: () => null,\r\n  getLeaderboard: () => null,\r\n\r\n};\r\n\r\n//reducer\r\nexport default function roomReducer(\r\n  state: State = initialState,\r\n  action: Action\r\n) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_USER:\r\n      return {\r\n        ...state,\r\n        id: payload.id,\r\n        name: payload.name,\r\n        username: payload.username,\r\n      };\r\n\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        id: payload.id,\r\n        username: payload.username,\r\n        errorMsg: \"\",\r\n      };\r\n\r\n    case USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        name: payload.name,\r\n        username: payload.username,\r\n        avatar: payload.avatar,\r\n        coins: payload.coins,\r\n        trophies: payload.trophies,\r\n      };\r\n\r\n      case UPDATE_AVATAR:\r\n      return {\r\n        ...state,\r\n        avatar: payload.avatarId,\r\n      };\r\n\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        id: \"\",\r\n        isLoggedIn:  false,\r\n        socketID: \"\",\r\n        name: \"\",\r\n        username: \"\",\r\n        trophies: \"\",\r\n        coins: \"\",\r\n        avatar: \"\",\r\n        errorMsg: \"\",\r\n        loading: false,\r\n      };\r\n\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case ONLINE_PLAYERS:\r\n      return {\r\n        ...state,\r\n        onlinePlayers: payload.onlinePlayers,\r\n      };\r\n\r\n    case LEADERBOARD:\r\n      return {\r\n        ...state,\r\n        leaderboard: payload.leaderboard,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMsg: payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { initialState } from './user.reducer';\r\nimport { State } from './user.type';\r\n\r\nconst DEFAULT_VALUE: State = {\r\n    ...initialState,\r\n};\r\n\r\nconst UserContext = React.createContext(DEFAULT_VALUE);\r\nexport default UserContext;\r\n\r\nexport const useUserContext = () => {\r\n    return React.useContext(UserContext);\r\n};\r\n","import * as React from \"react\";\r\n\r\n// Ant Design\r\nimport { notification } from 'antd';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nimport { SocketContext } from \"../socket\";\r\nimport { instance as axios } from \"../api\";\r\n\r\n// Utils\r\nimport { getUserIdByToken, IToken } from \"../../utils/getUserIdByToken\";\r\nimport { deleteCookie } from \"../../utils/handleCookie\";\r\nimport history from \"../../utils/history\";\r\n\r\n// Constantss\r\nimport SocketEvents from \"../../constants/SocketEvents\";\r\n\r\n\r\nimport {\r\n  CREATE_USER,\r\n  LOGIN,\r\n  LOGOUT,\r\n  USER_PROFILE,\r\n  ONLINE_PLAYERS,\r\n  SET_ERROR,\r\n  UPDATE_AVATAR,\r\n  LEADERBOARD\r\n} from \"../types\";\r\n\r\nimport UserContext from \"./user.context\";\r\nimport userReducer, { initialState as initialValues } from \"./user.reducer\";\r\nimport { State } from \"./user.type\";\r\n\r\nconst UserState: React.FC = ({ children }) => {\r\n  const initialState: State = {\r\n    ...initialValues,\r\n  };\r\n\r\n  const socket = React.useContext(SocketContext);\r\n\r\n  const [state, dispatch] = React.useReducer(userReducer, initialState);\r\n\r\n  const baseUrl = \"/api/v1/user\";\r\n\r\n  // Create User\r\n  const createUser = async (values: {\r\n    username: string;\r\n    name: string;\r\n    password: string;\r\n  }) => {\r\n    try {\r\n      const { username, name, password } = values;\r\n\r\n      await axios\r\n        .post(\r\n          baseUrl + \"/register\",\r\n          { username, name, password },\r\n          { withCredentials: true }\r\n        )\r\n        .then((res) => {\r\n          let user_id: IToken = getUserIdByToken();\r\n\r\n          dispatch({\r\n            type: CREATE_USER,\r\n            payload: { username, name, id: user_id.key.toString() },\r\n          });\r\n\r\n          history.push(\"/\");\r\n        })\r\n        .catch((e) => {\r\n          dispatch({\r\n            type: SET_ERROR,\r\n            payload: { message: e.response.data },\r\n          });\r\n        });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: { message: e.response.data },\r\n      });\r\n    }\r\n  };\r\n\r\n  // User login\r\n  const login = async (values: { username: string; password: string }) => {\r\n    try {\r\n      const { username, password } = values;\r\n\r\n      await axios\r\n        .post(\r\n          baseUrl + \"/login\",\r\n          { username, password },\r\n          { withCredentials: true }\r\n        )\r\n        .then((res) => {\r\n          let user_id: IToken = getUserIdByToken();\r\n\r\n          dispatch({\r\n            type: LOGIN,\r\n            payload: { username, id: user_id.key.toString() },\r\n          });\r\n\r\n          history.push(\"/\");\r\n        })\r\n        .catch((e) => {\r\n          dispatch({\r\n            type: SET_ERROR,\r\n            payload: { message: e.response.data },\r\n          });\r\n\r\n          notification.error({\r\n            message : e.response.data,\r\n            description : \"Tente novamente !\",\r\n            icon : <CloseCircleOutlined style={{ color: \"#d32626\" }} />,\r\n            className : \"antd-notification-error\",      \r\n            placement : \"bottomLeft\",\r\n            bottom : 50,\r\n            duration : 4.5,\r\n          });\r\n          \r\n        });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: { message: e.response.data },\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  // Get user information\r\n  const userProfile = async (id: string) => {\r\n    try {\r\n      await axios\r\n        .get(baseUrl + `/profile/${id}`)\r\n        .then((res) => {\r\n          const { name, username, avatar, coins, trophies } = res.data;\r\n\r\n          dispatch({\r\n            type: USER_PROFILE,\r\n            payload: { name, username, avatar, coins, trophies },\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          dispatch({\r\n            type: SET_ERROR,\r\n            payload: { message: e.response.data },\r\n          });\r\n        });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: { message: e.response.data },\r\n      });\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = async (userId: string) => {\r\n    try {\r\n      await axios\r\n        .delete(baseUrl + `/logout/${userId}`)\r\n        .then(() => {\r\n          deleteCookie(\"_token\");\r\n\r\n          history.push(\"/login\");\r\n\r\n          dispatch({\r\n            type: LOGOUT,\r\n          });\r\n        })\r\n\r\n        .catch((e) => {\r\n          dispatch({\r\n            type: SET_ERROR,\r\n            payload: { message: e.response.data },\r\n          });\r\n        });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: { message: e.response.data },\r\n      });\r\n    }\r\n  };\r\n\r\n  // Set user as online status\r\n  const setUserOnline = () => {\r\n    let user_id: IToken = getUserIdByToken();\r\n    socket.emit(SocketEvents.CLIENT_UPDATE_STATUS, { userId: user_id.key.toString() });\r\n  };\r\n\r\n  const updateUserAvatar = async (avatarId: string) => {\r\n    try {\r\n      let user_id: IToken = getUserIdByToken();\r\n\r\n      await axios\r\n        .put(baseUrl + `/avatar/${user_id.key}/${avatarId}`)\r\n        .then(() => {\r\n          dispatch({\r\n            type: UPDATE_AVATAR,\r\n            payload: { avatarId },\r\n          });\r\n        })\r\n\r\n    } catch (e) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: { message: \"Erro ao atualizar o avatar !\" },\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateUser = () => {};\r\n\r\n  const deleteUser = () => {};\r\n\r\n  const setLoading = () => {};\r\n\r\n  const getOnlinePlayers = async () => {\r\n    try{\r\n      await axios.get(baseUrl + '/online')\r\n      .then((players) => {\r\n          dispatch({\r\n            type: ONLINE_PLAYERS,\r\n            payload: { onlinePlayers: players.data }\r\n          });\r\n      })\r\n    }\r\n    catch(e){\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: { message: e.response.data },\r\n      });\r\n    }\r\n  };\r\n\r\n  const getLeaderboard = async() => {\r\n    try{\r\n      await axios.get(baseUrl + '/leaderboard')\r\n      .then((players) => {\r\n          dispatch({\r\n            type: LEADERBOARD,\r\n            payload: { leaderboard: players.data }\r\n          });\r\n      })\r\n    }\r\n    catch(e){\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: { message: e.response.data },\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        id: state.id,\r\n        isLoggedIn: state.isLoggedIn,\r\n        socketID: state.socketID,\r\n        username: state.username,\r\n        name: state.name,\r\n        trophies: state.trophies,\r\n        coins: state.coins,\r\n        avatar: state.avatar,\r\n        onlinePlayers: state.onlinePlayers,\r\n        loading: state.loading,\r\n        errorMsg: state.errorMsg,\r\n        leaderboard: state.leaderboard,\r\n        createUser,\r\n        login,\r\n        updateUser,\r\n        logout,\r\n        deleteUser,\r\n        userProfile,\r\n        setLoading,\r\n        getOnlinePlayers,\r\n        setUserOnline,\r\n        updateUserAvatar,\r\n        getLeaderboard,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;\r\n","import {\r\n  CREATE_MATCH,\r\n  JOIN_MATCH,\r\n  SET_LOADING,\r\n  MATCH_READY,\r\n  SET_OPPONENT_READY,\r\n  SET_READY,\r\n  SET_GAME,\r\n  START_MATCH,\r\n  SET_ROUND,\r\n  ROUND_RESULT,\r\n  ROUND_COUNTDOWN,\r\n  START_QUESTION,\r\n  HANDLE_INVITE,\r\n  MATCH_RESULT,\r\n  MATCH_END\r\n} from \"../types\";\r\nimport { Action, State } from \"./match.type\";\r\n\r\nexport const initialState: State = {\r\n  _id: \"\",\r\n  ownerId: \"\",\r\n  ownerInfo: {\r\n    id: 0,\r\n    username: \"\",\r\n    trophies: 0,\r\n    name: \"\",\r\n    coins: 0,\r\n    avatar: 0,\r\n  },\r\n  opponentInfo: {\r\n    id: 0,\r\n    username: \"\",\r\n    trophies: 0,\r\n    name: \"\",\r\n    coins: 0,\r\n    avatar: 0,\r\n  },\r\n  userReady: false,\r\n  opponentReady: false,\r\n  receivedInvite: false,\r\n  invite: {\r\n    matchId: \"\",\r\n    ownerInfo: {\r\n      id: 0,\r\n      username: \"\",\r\n      trophies: 0,\r\n      avatar: 0,\r\n    },\r\n  },\r\n  game: {\r\n    currentRound: 1,\r\n    totalRound: 5,\r\n    showRoundScreen: false,\r\n  },\r\n  round: {\r\n    questionId: \"\",\r\n    questionText: \"\",\r\n    showCorrectAnswer: false,\r\n    answers: [],\r\n    correctAnswer: 0,\r\n    roundTime: \"\",\r\n  },\r\n  roundResult: {\r\n    ownerSelected: 0,\r\n    opponentSelected: 0,\r\n    ownerScore: 0,\r\n    opponentScore: 0,\r\n  },\r\n  matchResult: {\r\n    owner:{    \r\n      score: 0,\r\n      winned: false,\r\n      coins: 0,\r\n      trophies: 0,\r\n    },\r\n    opponent: {\r\n      score: 0,\r\n      winned: false,\r\n      coins: 0,\r\n      trophies: 0,\r\n    },\r\n  },\r\n  matchStarted: false,\r\n  loading: false,\r\n  createMatch: () => null,\r\n  acceptBattleInvite: () => null,\r\n  setUserReady: () => null,\r\n  answerQuestion: () => null,\r\n  setLoading: () => null,\r\n  matchEnded: () => null,\r\n  denyBattleInvite: () => null,\r\n};\r\n\r\n//reducer\r\nexport default function matchReducer(\r\n  state: State = initialState,\r\n  action: Action\r\n) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CREATE_MATCH:\r\n    case JOIN_MATCH:\r\n      return {\r\n        ...state,\r\n        _id: payload._id,\r\n        ownerId: payload.ownerId,\r\n        opponentId: payload.opponentId,\r\n      };\r\n\r\n    case MATCH_READY:\r\n      return {\r\n        ...state,\r\n        ownerInfo: payload.ownerInfo,\r\n        opponentInfo: payload.opponentInfo,\r\n      };\r\n\r\n    case SET_READY:\r\n      return {\r\n        ...state,\r\n        userReady: true,\r\n      };\r\n\r\n    case SET_OPPONENT_READY:\r\n      return {\r\n        ...state,\r\n        opponentReady: true,\r\n      };\r\n\r\n    case HANDLE_INVITE:\r\n      return {\r\n        ...state,\r\n        receivedInvite: true,\r\n        invite: { matchId: payload.matchId, ownerInfo: payload.ownerInfo },\r\n        loading: false,\r\n      };\r\n\r\n    case SET_GAME:\r\n      return {\r\n        ...state,\r\n        game: {\r\n          currentRound: payload.currentRound,\r\n          totalRound: payload.totalRound,\r\n          showRoundScreen: true,\r\n        },\r\n      };\r\n\r\n    case START_QUESTION:\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          showRoundScreen: false,\r\n        },\r\n      };\r\n\r\n    case SET_ROUND:\r\n      return {\r\n        ...state,\r\n        round: {\r\n          questionId: payload.questionId,\r\n          questionText: payload.questionText,\r\n          showCorrectAnswer: false,\r\n          answers: payload.answers,\r\n          correctAnswer: payload.correctAnswer,\r\n          roundTime: \"\",\r\n        },\r\n      };\r\n\r\n    case ROUND_COUNTDOWN:\r\n      return {\r\n        ...state,\r\n        round: {\r\n          ...state.round,\r\n          roundTime: payload.roundTime,\r\n        },\r\n      };\r\n\r\n    case START_MATCH:\r\n      return {\r\n        ...state,\r\n        matchStarted: true,\r\n      };\r\n\r\n    case ROUND_RESULT:\r\n      return {\r\n        ...state,\r\n        roundResult: {\r\n          ownerSelected: payload.ownerSelected,\r\n          opponentSelected: payload.opponentSelected,\r\n          ownerScore: payload.ownerScore,\r\n          opponentScore: payload.opponentScore,\r\n        },\r\n        round: {\r\n          ...state.round,\r\n          showCorrectAnswer: true,\r\n        },\r\n      };\r\n\r\n    case MATCH_RESULT:\r\n      return {\r\n        ...state,\r\n        matchResult: {\r\n          owner: payload.owner,\r\n          opponent: payload.opponent,\r\n        },\r\n      };\r\n\r\n    case MATCH_END:\r\n      return {\r\n        ...state,\r\n        _id: \"\",\r\n        ownerId: \"\",\r\n        ownerInfo: {\r\n          id: 0,\r\n          username: \"\",\r\n          trophies: 0,\r\n          name: \"\",\r\n          coins: 0,\r\n          avatar: 0,\r\n        },\r\n        opponentInfo: {\r\n          id: 0,\r\n          username: \"\",\r\n          trophies: 0,\r\n          name: \"\",\r\n          coins: 0,\r\n          avatar: 0,\r\n        },\r\n        userReady: false,\r\n        opponentReady: false,\r\n        receivedInvite: false,\r\n        invite: {\r\n          matchId: \"\",\r\n          ownerInfo: {\r\n            id: 0,\r\n            username: \"\",\r\n            trophies: 0,\r\n            avatar: 0,\r\n          },\r\n        },\r\n        game: {\r\n          currentRound: 1,\r\n          totalRound: 5,\r\n          showRoundScreen: false,\r\n        },\r\n        round: {\r\n          questionId: \"\",\r\n          questionText: \"\",\r\n          showCorrectAnswer: false,\r\n          answers: [],\r\n          correctAnswer: 0,\r\n          roundTime: \"\",\r\n        },\r\n        roundResult: {\r\n          ownerSelected: 0,\r\n          opponentSelected: 0,\r\n          ownerScore: 0,\r\n          opponentScore: 0,\r\n        },\r\n        matchResult: {\r\n          owner:{    \r\n            score: 0,\r\n            winned: false,\r\n            coins: 0,\r\n            trophies: 0,\r\n          },\r\n          opponent: {\r\n            score: 0,\r\n            winned: false,\r\n            coins: 0,\r\n            trophies: 0,\r\n          },\r\n        },\r\n\r\n      }\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { initialState } from \"./match.reducer\";\r\nimport { State } from \"./match.type\";\r\n\r\nconst DEFAULT_VALUE: State = {\r\n  ...initialState,\r\n};\r\n\r\nconst MatchContext = React.createContext(DEFAULT_VALUE);\r\nexport default MatchContext;\r\n\r\nexport const useMatchContext = () => {\r\n  return React.useContext(MatchContext);\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport {\r\n  CREATE_MATCH,\r\n  JOIN_MATCH,\r\n  SET_LOADING,\r\n  MATCH_READY,\r\n  HANDLE_INVITE,\r\n  SET_OPPONENT_READY,\r\n  SET_GAME,\r\n  START_MATCH,\r\n  START_QUESTION,\r\n  ROUND_COUNTDOWN,\r\n  ROUND_RESULT,\r\n  SET_ROUND,\r\n  SET_READY,\r\n  MATCH_RESULT,\r\n  MATCH_END\r\n} from \"../types\";\r\n\r\nimport MatchContext from \"./match.context\";\r\nimport matchReducer, { initialState as initialValues } from \"./match.reducer\";\r\nimport { State } from \"./match.type\";\r\n\r\nimport { SocketContext } from \"../socket\";\r\n\r\n// Utils\r\nimport { getUserIdByToken, IToken } from \"../../utils/getUserIdByToken\";\r\nimport history from \"utils/history\";\r\n\r\nimport SocketEvents from \"../../constants/SocketEvents\";\r\n\r\nimport { instance as axios } from \"../api\";\r\n\r\n// Ant Design\r\nimport { notification } from 'antd';\r\nimport { LoadingOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nconst MatchState: React.FC = ({ children }) => {\r\n  const initialState: State = {\r\n    ...initialValues,\r\n  };\r\n\r\n  const socket = React.useContext(SocketContext);\r\n\r\n  const [state, dispatch] = React.useReducer(matchReducer, initialState);\r\n\r\n  const baseUrl: string = \"/api/v1/match\";\r\n\r\n  React.useEffect(() => {\r\n    // Player left match\r\n    socket.on(SocketEvents.SERVER_PLAYER_LEFT, (data: any) => {\r\n      \r\n      notification.open({\r\n        message : \"Seu oponente saiu da partida !\",\r\n        description : \"Você está redirecionado para o lobby !\",\r\n        onClose: (() => matchEnded()),\r\n        icon : <LoadingOutlined style={{ color: \"#161616\" }} />,\r\n        className : \"antd-notification\",      \r\n        placement : \"bottomLeft\",\r\n        bottom : 50,\r\n        duration : 4.5,\r\n      });\r\n      \r\n    });\r\n\r\n    // Player denied invite\r\n    socket.on(SocketEvents.SERVER_PLAYER_DENIED_INVITE, (data: any) => {\r\n      notification.open({\r\n        message : \"Seu oponente recusou seu convite de batalha :(\",\r\n        description : \"Você está redirecionado para o lobby !\",\r\n        onClose: (() => matchEnded()),\r\n        icon : <LoadingOutlined style={{ color: \"#161616\" }} />,\r\n        className : \"antd-notification\",      \r\n        placement : \"bottomLeft\",\r\n        bottom : 50,\r\n        duration : 4.5,\r\n      });\r\n      \r\n    });\r\n    \r\n    // Match end\r\n    socket.on(SocketEvents.SERVER_MATCH_END, (data: any) => {\r\n      let ownerData;\r\n      let opponentData;\r\n\r\n      let userId: IToken = getUserIdByToken();\r\n\r\n      if (userId.key.toString() === data.owner.id.toString()) {\r\n        ownerData = data.owner;\r\n        opponentData = data.opponent;\r\n      } else {\r\n        ownerData = data.opponent;\r\n        opponentData = data.owner;\r\n      }\r\n\r\n      dispatch({\r\n        type: MATCH_RESULT,\r\n        payload:{\r\n          owner: ownerData,\r\n          opponent: opponentData\r\n        }\r\n      });\r\n\r\n      history.push(`/result`);\r\n    });\r\n\r\n    // Start Match (show countdown to the start of the first round)\r\n    socket.on(SocketEvents.SERVER_MATCH_START, () => {\r\n      dispatch({\r\n        type: START_MATCH,\r\n      });\r\n    });\r\n\r\n    // Start Round\r\n    socket.on(SocketEvents.SERVER_MATCH_START_ROUND, (data: any) => {\r\n      const { currentRound, totalRound } = data;\r\n\r\n      dispatch({\r\n        type: SET_GAME,\r\n        payload: { currentRound, totalRound },\r\n      });\r\n\r\n      history.push(`/game`);\r\n    });\r\n\r\n    // Start question\r\n    socket.on(SocketEvents.SERVER_MATCH_START_QUESTION, (data: any) => {\r\n\r\n      dispatch({\r\n        type: SET_ROUND,\r\n        payload: {\r\n          questionId: data.id,\r\n          questionText: data.title,\r\n          answers: [\r\n            { id: data.answer1.id, text: data.answer1.text },\r\n            { id: data.answer2.id, text: data.answer2.text },\r\n            { id: data.answer3.id, text: data.answer3.text },\r\n            { id: data.answer4.id, text: data.answer4.text },\r\n          ],\r\n          correctAnswer: data.correctAnswer\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: START_QUESTION,\r\n      });\r\n\r\n    });\r\n\r\n    // Round countdown\r\n    socket.on(SocketEvents.SERVER_MATCH_COUNTDOWN, (data: any) => {\r\n      dispatch({\r\n        type: ROUND_COUNTDOWN,\r\n        payload: {roundTime: data.seconds}\r\n      });\r\n\r\n    })\r\n\r\n    // Round end\r\n    socket.on(SocketEvents.SERVER_MATCH_END_ROUND, (data: any) => {\r\n      let ownerSelected;\r\n      let opponentSelected;\r\n      let ownerScore;\r\n      let opponentScore;\r\n\r\n      let userId: IToken = getUserIdByToken();\r\n\r\n      if (userId.key.toString() === data.owner.id.toString()) {\r\n        ownerSelected = data.owner.answer;\r\n        opponentSelected = data.opponent.answer;\r\n        ownerScore = data.owner.score;\r\n        opponentScore = data.opponent.score;\r\n      } else {\r\n        ownerSelected = data.opponent.answer;\r\n        opponentSelected = data.owner.answer;\r\n        ownerScore = data.opponent.score;\r\n        opponentScore = data.owner.score;\r\n      }\r\n\r\n      dispatch({\r\n        type: ROUND_RESULT,\r\n        payload: {\r\n          ownerSelected,\r\n          opponentSelected,\r\n          ownerScore,\r\n          opponentScore,\r\n        }\r\n      });\r\n\r\n    })\r\n\r\n    // Set opponent ready\r\n    socket.on(SocketEvents.SERVER_PLAYER_READY, (data: any) => {\r\n      let userId: IToken = getUserIdByToken();\r\n      if (data.userId.toString() !== userId.key.toString()) {\r\n        dispatch({\r\n          type: SET_OPPONENT_READY,\r\n        });\r\n      }\r\n    });\r\n\r\n    // Receive game invite\r\n    socket.on(SocketEvents.SERVER_SEND_INVITE, (data: any) => {\r\n      dispatch({\r\n        type: HANDLE_INVITE,\r\n        payload: {\r\n          matchId: data.matchId,\r\n          ownerInfo: data.ownerInvite,\r\n        },\r\n      });\r\n    });\r\n\r\n    // Player joinend\r\n    socket.on(SocketEvents.SERVER_PLAYER_JOINED, (data: any) => {\r\n      let ownerData;\r\n      let opponentData;\r\n\r\n      let userId: IToken = getUserIdByToken();\r\n\r\n      if (userId.key.toString() === data.owner.id.toString()) {\r\n        ownerData = data.owner;\r\n        opponentData = data.opponent;\r\n      } else {\r\n        ownerData = data.opponent;\r\n        opponentData = data.owner;\r\n      }\r\n\r\n      dispatch({\r\n        type: MATCH_READY,\r\n          payload: {\r\n          ownerInfo: ownerData,\r\n          opponentInfo: opponentData,\r\n        },\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.off(SocketEvents.SERVER_SEND_INVITE);\r\n      socket.off(SocketEvents.SERVER_PLAYER_JOINED);\r\n      socket.off(SocketEvents.SERVER_PLAYER_READY);\r\n      socket.off(SocketEvents.SERVER_PLAYER_DENIED_INVITE);\r\n\r\n      socket.off(SocketEvents.SERVER_MATCH_COUNTDOWN);\r\n      socket.off(SocketEvents.SERVER_MATCH_START_QUESTION);\r\n      socket.off(SocketEvents.SERVER_MATCH_START_ROUND);\r\n      socket.off(SocketEvents.SERVER_MATCH_START);\r\n      socket.off(SocketEvents.SERVER_MATCH_END);\r\n      socket.off(SocketEvents.SERVER_PLAYER_LEFT);\r\n      \r\n    };\r\n  }, []);\r\n\r\n  // create match\r\n  const createMatch = async (ownerId: string, opponentId: string) => {\r\n    try {\r\n      await axios\r\n        .post(baseUrl + `/create`, { ownerId }, { withCredentials: true })\r\n        .then((matchId) => {\r\n          socket.emit(SocketEvents.CLIENT_INVITE_PLAYER, {\r\n            matchId: matchId.data,\r\n            opponentId,\r\n            ownerId,\r\n          });\r\n\r\n          socket.emit(SocketEvents.CLIENT_JOIN_MATCH, {\r\n            matchId: matchId.data,\r\n            ownerId,\r\n          });\r\n          \r\n\r\n          dispatch({\r\n            type: CREATE_MATCH,\r\n            payload: { _id: matchId.data, ownerId, opponentId: 0 },\r\n          });\r\n\r\n          history.push(`/lobby/${matchId.data}`);\r\n\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // join match\r\n  const acceptBattleInvite = async (\r\n    userId: string,\r\n    matchId: string,\r\n    ownerId: string\r\n  ) => {\r\n    try {\r\n      await axios\r\n        .put(baseUrl + `/join/${userId}/${matchId}`, { withCredentials: true })\r\n        .then(() => {\r\n          socket.emit(SocketEvents.CLIENT_JOIN_MATCH, {\r\n            matchId: parseInt(matchId),\r\n            userId,\r\n          });\r\n\r\n          dispatch({\r\n            type: JOIN_MATCH,\r\n            payload: { _id: matchId, ownerId, opponentId: userId },\r\n          });\r\n\r\n          history.push(`/lobby/${matchId}`);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const denyBattleInvite = async (\r\n    matchId: string,\r\n    ownerId: string\r\n  ) => {\r\n\r\n    socket.emit(SocketEvents.CLIENT_DENY_INVITE, {\r\n      matchId: parseInt(matchId),\r\n      ownerId: ownerId,\r\n    });\r\n\r\n  };\r\n\r\n  // set loading\r\n  const setLoading = () => {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n  };\r\n\r\n  // Set user Ready\r\n  const setUserReady = (matchId: string) => {\r\n    let userId: IToken = getUserIdByToken();\r\n\r\n    socket.emit(SocketEvents.CLIENT_USER_READY, {\r\n      matchId: parseInt(matchId),\r\n      userId: userId.key.toString(),\r\n    });\r\n\r\n    dispatch({\r\n      type: SET_READY,\r\n    });\r\n  };\r\n  \r\n  // Answer qustion\r\n  const answerQuestion = (matchId: number, questionId: string, answerId: number, correctAnswer: number) => {\r\n    let user_id: IToken = getUserIdByToken();\r\n\r\n    socket.emit(SocketEvents.CLIENT_ANSWER_QUESTION, {matchId: matchId, userId: user_id.key, questionId, answerId, correctAnswer});\r\n  };\r\n\r\n  // End match and run cleanup\r\n  const matchEnded = () => {\r\n    dispatch({\r\n      type: MATCH_END,\r\n    });\r\n\r\n    history.push(`/`);\r\n  };\r\n\r\n  return (\r\n    <MatchContext.Provider\r\n      value={{\r\n        _id: state._id,\r\n        ownerId: state.ownerId,\r\n        ownerInfo: state.ownerInfo,\r\n        opponentInfo: state.opponentInfo,\r\n        userReady: state.userReady,\r\n        opponentReady: state.opponentReady,\r\n        receivedInvite: state.receivedInvite,\r\n        invite: state.invite,\r\n        game: state.game,\r\n        round: state.round,\r\n        roundResult: state.roundResult,\r\n        matchResult: state.matchResult,\r\n        matchStarted: state.matchStarted,\r\n        loading: state.loading,\r\n        createMatch,\r\n        acceptBattleInvite,\r\n        setLoading,\r\n        answerQuestion,\r\n        setUserReady,\r\n        matchEnded,\r\n        denyBattleInvite,\r\n      }}\r\n    >\r\n      {children}\r\n    </MatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MatchState;\r\n","import avatar from 'assets/avatar.json';\r\n\r\nconst SelectAvatarSrc = (avatarId: string): string => {\r\n    let result: { id: number; src: string; }[];\r\n    let src: string;\r\n\r\n    result = avatar.avatars.filter((i) => i.id.toString() == avatarId)\r\n\r\n    src = result[0] ? result[0].src : '';\r\n\r\n    return src;\r\n}\r\n\r\nexport default SelectAvatarSrc;","import React from 'react';\r\nimport './style.css';\r\n\r\ninterface IInfoBoxProps{\r\n  icon: any,\r\n  text: string\r\n}\r\n\r\n\r\nconst InfoBox: React.FC<IInfoBoxProps> = ({icon, text}) => {\r\n  return(\r\n    <div className=\"InfoBox-Container\">\r\n      <img src={icon} className=\"InfoBox-icon\" alt=\"info box icon\" />\r\n      <h3>{text}</h3>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default InfoBox;\r\n","export default __webpack_public_path__ + \"static/media/edit.b44e4334.svg\";","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Assets \r\nimport EditIcon from 'assets/icons/edit.svg';\r\n\r\ninterface IAvatarProps {\r\n  username: string;\r\n  avatarSrc: string;\r\n  openDrawer: () => void;\r\n}\r\n\r\nconst Avatar: React.FC<IAvatarProps> = ({ username, avatarSrc, openDrawer }) => {\r\n  return (\r\n    <div className=\"Avatar-Container\" onClick={openDrawer}>\r\n\r\n      <div className=\"Avatar-edit-container\">\r\n        <img src={EditIcon} className=\"Avatar-edit-icon\" alt=\"user avatar\"  />\r\n      </div>\r\n\r\n      <div className=\"Avatar-Image-Container\">\r\n        <img src={avatarSrc} className=\"Avatar-image\" alt=\"user avatar\" />\r\n      </div>\r\n\r\n      <h1 className=\"Avatar-Username\">{username.toUpperCase()}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\ninterface IPlayButtonProps {\r\n  text: string;\r\n  clickAction: () => void;\r\n}\r\n\r\nconst PlayButton: React.FC<IPlayButtonProps> = ({ text, clickAction }) => {\r\n  return (\r\n    <button className=\"PlayButton-Container\" onClick={clickAction}>\r\n      <h2>{text}</h2>\r\n    </button>\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default PlayButton;\r\n","export default __webpack_public_path__ + \"static/media/trophy.b7eae62c.svg\";","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { Modal, Avatar } from \"antd\";\r\n\r\n// Utils\r\nimport { getUserIdByToken, IToken } from \"../../utils/getUserIdByToken\";\r\n\r\n// Assets\r\nimport TrophyIcon from \"../../assets/icons/trophy.svg\";\r\n\r\n// Context\r\nimport { useMatchContext } from \"../../context/match/match.context\";\r\n\r\n//Utils\r\nimport SelectAvatarSrc from 'utils/chooseAvatar';\r\n\r\ninterface IModalInviteProps{\r\n  closeModal: () => void;\r\n  openModal: boolean;\r\n}\r\n\r\nconst MatchInvite: React.FC<IModalInviteProps> = ({ openModal, closeModal }) => {\r\n  const { acceptBattleInvite, invite, denyBattleInvite } = useMatchContext();\r\n\r\n  let userId: IToken = getUserIdByToken();\r\n\r\n  const handleAccept = () => {\r\n    closeModal();\r\n    acceptBattleInvite(\r\n      userId.key.toString(),\r\n      invite.matchId.toString(),\r\n      invite.ownerInfo.id.toString()\r\n    );\r\n  };\r\n\r\n  const handleDeny = () => {\r\n    closeModal();\r\n    denyBattleInvite(\r\n      invite.matchId.toString(),\r\n      invite.ownerInfo.id.toString()\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        footer={null}\r\n        title=\"Convite de batalha\"\r\n        centered\r\n        visible={openModal}\r\n        closable={false}\r\n      >\r\n        <div className=\"matchInvite-challenger-info\">\r\n          <div className=\"matchInvite-challenger-avatar\">\r\n            <Avatar\r\n              size={64}\r\n              style={{ verticalAlign: \"middle\", border: \"2px solid #fff\" }}\r\n              src={SelectAvatarSrc(invite.ownerInfo.avatar.toString())}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"matchInvite-challenger-description\">\r\n            <h2>{invite.ownerInfo.username.toUpperCase()}</h2>\r\n            <div className=\"matchInvite-trophy-section\">\r\n              <img\r\n                src={TrophyIcon}\r\n                className=\"Lobby-trophy-icon\"\r\n                alt=\"user avatar icon\"\r\n              />\r\n              <h2>{invite.ownerInfo.trophies}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    \r\n        <div className=\"matchInvite-buttons\">\r\n          <button onClick={handleDeny} className=\"matchInvite-deny\">RECUSAR</button>\r\n          <button onClick={handleAccept} className=\"matchInvite-accept\">\r\n            ACEITAR\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MatchInvite;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { Avatar } from \"antd\";\r\n\r\n// Assets\r\nimport AvatarIcon from \"assets/icons/hacker.svg\";\r\nimport TrophyIcon from \"assets/icons/trophy.svg\";\r\n\r\n//Utils\r\nimport SelectAvatarSrc from 'utils/chooseAvatar';\r\n\r\ninterface IListItemProps {\r\n  setPlayer: any;\r\n  Pkey: number;\r\n  avatar: number;\r\n  username: string;\r\n  trophies: number;\r\n  id: number;\r\n  inviteButton: () => void;\r\n}\r\n\r\nconst ListItem: React.FC<IListItemProps> = ({\r\n  Pkey,\r\n  avatar,\r\n  username,\r\n  trophies,\r\n  id,\r\n  setPlayer,\r\n  inviteButton\r\n}) => {\r\n  return (\r\n      <div className=\"listitem-container\">\r\n        <div className=\"listitem-key\">{Pkey}</div>\r\n\r\n        <div className=\"listitem-info\">\r\n          <div className=\"listitem-avatar-username\">\r\n            <Avatar\r\n              style={{verticalAlign: \"middle\", border: \"1px solid #fff\" }}\r\n              src={SelectAvatarSrc(avatar.toString())}\r\n              size=\"large\"\r\n            />\r\n            <div>\r\n            <h4>{username.toUpperCase()}</h4>\r\n              <div className=\"listitem-trophies\">\r\n                <img\r\n                  src={TrophyIcon}\r\n                  className=\"listitem-trophy-icon\"\r\n                  alt=\"user avatar icon\"\r\n                />\r\n                <p>{trophies}</p>\r\n            </div>\r\n            </div>\r\n          </div>\r\n          <button onClick={() => { setPlayer(id); inviteButton()}} className=\"listitem-invitebutton\">Desafiar</button>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport ListItem from \"../ListItem\";\r\n\r\nimport { IPlayer } from '../../../../context/user/user.type';\r\n\r\n\r\ninterface IListViewProps{\r\n  setPlayer: any;\r\n  playersList: IPlayer[];\r\n  inviteButton: () => void;\r\n}\r\n\r\n\r\nconst ListView: React.FC<IListViewProps>= ({setPlayer, playersList, inviteButton}) => {\r\n\r\n  const [playerId, setPlayerId] = React.useState(\"\");\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const playerChoosen = e.target.value;\r\n    setPlayer(playerChoosen);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n\r\n    setPlayer(playerId)\r\n\r\n  }, [playerId])\r\n  \r\n\r\n  return (\r\n    <div className=\"listview-container\">\r\n      <div className=\"listview-header\"></div>\r\n\r\n      <div className=\"listview-children\">\r\n          {playersList.map((players, i) => (\r\n              <ListItem\r\n                key={players.player_id}\r\n                Pkey={i +1}\r\n                avatar={players.player_avatar}\r\n                username={players.player_username}\r\n                trophies={players.player_trophies}\r\n                id={players.player_id}\r\n                inviteButton={inviteButton}\r\n                setPlayer={setPlayerId}\r\n              />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { Modal } from \"antd\";\r\n\r\nimport ListView from \"./components/ListView\";\r\n\r\nimport { useMatchContext } from \"../../context/match/match.context\";\r\nimport { useUserContext } from \"../../context/user/user.context\";\r\n\r\n// Utils\r\nimport { getUserIdByToken, IToken } from \"../../utils/getUserIdByToken\";\r\n\r\ninterface IOnlinePlayerModalProps {\r\n  openModal: boolean;\r\n  closeModal: () => void;\r\n}\r\n\r\nconst OnlinePlayersModal: React.FC<IOnlinePlayerModalProps> = ({ openModal, closeModal }) => {\r\n  const { createMatch } = useMatchContext();\r\n  const { onlinePlayers } = useUserContext();\r\n\r\n  const [playerId, setPlayerId] = React.useState(\"\");\r\n\r\n  const [isvisible, setIsVisible] = React.useState(openModal);\r\n\r\n  let userId: IToken = getUserIdByToken();\r\n\r\n  React.useEffect(() => {\r\n    if (openModal)\r\n      setIsVisible(true)\r\n    else\r\n      setIsVisible(false);\r\n\r\n  }, [openModal])\r\n\r\n  React.useEffect(() => {\r\n    if(playerId){\r\n      createMatch(userId.key.toString(), playerId);\r\n      closeModal();\r\n    }\r\n\r\n  }, [playerId])\r\n\r\n  const challengePlayer = () => {\r\n    setPlayerId(playerId)\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Desafie um amigo \"\r\n        footer={null}\r\n        closable={false}\r\n        visible={isvisible}\r\n        onCancel={closeModal}\r\n      >\r\n        <ListView setPlayer={setPlayerId} playersList={onlinePlayers.filter((player) => player.player_id != userId.key)} inviteButton={challengePlayer} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OnlinePlayersModal;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useWindowDimensions() {\r\n  const hasWindow = typeof window !== \"undefined\";\r\n\r\n  function getWindowDimensions() {\r\n    const width = window.innerWidth ;\r\n    const height = window.innerHeight;\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  }\r\n\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (hasWindow) {\r\n      const handleResize = function handleResize() {\r\n        setWindowDimensions(getWindowDimensions());\r\n      }\r\n\r\n      window.addEventListener(\"resize\", handleResize);\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }\r\n  }, [hasWindow]);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nimport { Drawer } from 'antd';\r\n\r\n// Assets\r\nimport avatars from 'assets/avatar.json';\r\n\r\n// Hooks\r\nimport useWindowDimensions from \"../../hooks/useWindowDimension\";\r\n\r\n// Context \r\nimport { useUserContext } from \"../../context/user/user.context\";\r\n\r\ninterface IChooseAvatarDrawer {\r\n    openDrawer: boolean;\r\n    closeDrawer: () => void;\r\n}\r\n\r\n\r\nconst ChooseAvatarDrawer: React.FC<IChooseAvatarDrawer> = ({ openDrawer, closeDrawer }) => {\r\n    const { updateUserAvatar } = useUserContext();\r\n\r\n    const [visible, setVisible] = React.useState(openDrawer);\r\n\r\n    React.useEffect(() => {\r\n        if (openDrawer)\r\n            setVisible(true)\r\n        else\r\n            setVisible(false);\r\n\r\n    }, [openDrawer])\r\n\r\n    const updateAvatar = (avatarId: string) => {\r\n        updateUserAvatar(avatarId);\r\n        closeDrawer();\r\n    }\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n    return (\r\n        <Drawer\r\n            height={width <= 900 ? 500 : 300}\r\n            title=\"Selecionar Avatar \"\r\n            placement={\"bottom\"}\r\n            closable={false}\r\n            visible={visible}\r\n            onClose={closeDrawer}\r\n        >\r\n            <div className=\"chooseavatar-container\">\r\n                {avatars.avatars.map(avatar => (\r\n                    <img key={avatar.id} src={avatar.src} alt=\"avatar icons\" onClick={() => updateAvatar(avatar.id.toString())} />\r\n                ))}\r\n            </div>\r\n\r\n        </Drawer>\r\n    )\r\n}\r\n\r\n\r\nexport default ChooseAvatarDrawer;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { Avatar } from \"antd\";\r\n\r\n// Assets\r\nimport TrophyIcon from \"assets/icons/trophy.svg\";\r\n\r\n//Utils\r\nimport SelectAvatarSrc from \"utils/chooseAvatar\";\r\n\r\ninterface IListItemProps {\r\n  Pkey: number;\r\n  avatar: number;\r\n  username: string;\r\n  trophies: number;\r\n  id: number;\r\n}\r\n\r\nconst ListItem: React.FC<IListItemProps> = ({\r\n  Pkey,\r\n  id,\r\n  avatar,\r\n  username,\r\n  trophies,\r\n}) => {\r\n  return (\r\n    <div className=\"listitem-container\">\r\n      <div className=\"listitem-key\">{Pkey}</div>\r\n\r\n      <div className=\"listitem-info\">\r\n        <div className=\"listitem-avatar-username\">\r\n          <Avatar\r\n            style={{ verticalAlign: \"middle\", border: \"1px solid #fff\" }}\r\n            src={SelectAvatarSrc(avatar.toString())}\r\n            size=\"large\"\r\n          />\r\n          <div>\r\n            <h4>{username.toUpperCase()}</h4>\r\n            <div className=\"listitem-trophies\">\r\n              <img\r\n                src={TrophyIcon}\r\n                className=\"listitem-trophy-icon\"\r\n                alt=\"user avatar icon\"\r\n              />\r\n              <p>{trophies}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport ListItem from \"../ListItem\";\r\n\r\nimport { IPlayer } from '../../../../context/user/user.type'\r\n\r\n\r\ninterface IListViewProps{\r\n  players: IPlayer[]\r\n}\r\n\r\n\r\nconst ListView: React.FC<IListViewProps>= ({ players }) => {\r\n  return (\r\n    <div className=\"listview-container\">\r\n      <div className=\"listview-header\"></div>\r\n\r\n      <div className=\"listview-children\">\r\n          {players.map((players, i) => (\r\n              <ListItem\r\n                key={players.player_id}\r\n                Pkey={4 + i}\r\n                avatar={players.player_avatar}\r\n                username={players.player_username}\r\n                trophies={players.player_trophies}\r\n                id={players.player_id}\r\n              />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n","export default __webpack_public_path__ + \"static/media/1_badge.e4575def.svg\";","export default __webpack_public_path__ + \"static/media/2_badge.a115f5fc.svg\";","export default __webpack_public_path__ + \"static/media/3_badge.66799ff8.svg\";","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { Modal, Avatar, Drawer } from \"antd\";\r\n\r\nimport ListView from \"./components/ListView\";\r\n\r\nimport { useUserContext } from \"context/user/user.context\";\r\nimport { IPlayer } from \"context/user/user.type\";\r\n\r\n// Utils\r\nimport { getUserIdByToken, IToken } from \"utils/getUserIdByToken\";\r\nimport SelectAvatarSrc from \"utils/chooseAvatar\";\r\n\r\n// Assets\r\nimport TrophyIcon from \"assets/icons/trophy.svg\";\r\nimport firstBadge from 'assets/icons/1_badge.svg'\r\nimport secondBadge from 'assets/icons/2_badge.svg'\r\nimport thirdBadge from 'assets/icons/3_badge.svg'\r\n\r\ninterface ILeaderboardModalProps {\r\n  openModal: boolean;\r\n  closeModal: (e: any) => void;\r\n}\r\n\r\nconst OnlinePlayersModal: React.FC<ILeaderboardModalProps> = ({ openModal, closeModal }) => {\r\n  const { leaderboard, getLeaderboard } = useUserContext();\r\n\r\n  const [isvisible, setIsVisible] = React.useState(openModal);\r\n  const [podium, setPodium] = React.useState<IPlayer[]>([]);\r\n  const [leaderboardListRest, setLeaderboardListRest] = React.useState<IPlayer[]>([]);\r\n\r\n  let userId: IToken = getUserIdByToken(); // TODO -> Mark the user if its self\r\n\r\n  React.useEffect(() => {\r\n    if (openModal) \r\n      setIsVisible(true);\r\n    else \r\n      setIsVisible(false);\r\n  }, [openModal]);\r\n\r\n  React.useEffect(() => {\r\n    getLeaderboard();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (leaderboard) {\r\n      setPodium(leaderboard.slice(0, 3));\r\n      setLeaderboardListRest(leaderboard.slice(3));\r\n    }\r\n  }, [leaderboard]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Leaderboard\"\r\n        footer={null}\r\n        closable={false}\r\n        visible={openModal ? true : false}\r\n        onCancel={closeModal}\r\n      >\r\n        <div className=\"leaderboard-top3\">\r\n          <div className=\"leaderboard-top3-card-container\">\r\n            <Avatar\r\n              style={{ verticalAlign: \"middle\", border: \"1px solid #fff\" }}\r\n              src={SelectAvatarSrc(podium.length > 1 ? podium[1].player_avatar.toString() : \"-\")}\r\n              size=\"large\"\r\n            />\r\n            <h4>{podium.length > 1 ? podium[1].player_username.toUpperCase() : \"-\"}</h4>\r\n\r\n            <div className=\"leaderboard-top3-card-trophies\">\r\n              <img\r\n                src={TrophyIcon}\r\n                className=\"leaderboard-top3-card-trophy-icon\"\r\n                alt=\"Trophy Icon\"\r\n              />\r\n              <p>{podium.length > 1 ? podium[1].player_trophies : \"-\"}</p>\r\n            </div>\r\n            <img\r\n                src={secondBadge}\r\n                className=\"leaderboard-top3-card-badge\"\r\n                alt=\"Trophy Icon\"\r\n              />\r\n          </div>\r\n          <div className=\"leaderboard-top3-card-container\">\r\n            <Avatar\r\n              style={{ verticalAlign: \"middle\", border: \"1px solid #fff\" }}\r\n              src={SelectAvatarSrc(podium.length > 1 ? podium[0].player_avatar.toString() : \"-\")}\r\n              size={64}\r\n            />\r\n            <h4>{podium.length > 1 ? podium[0].player_username.toUpperCase() : \"-\"}</h4>\r\n            <div className=\"leaderboard-top3-card-trophies\">\r\n              <img\r\n                src={TrophyIcon}\r\n                className=\"leaderboard-top3-card-trophy-icon\"\r\n                alt=\"Trophy Icon\"\r\n              />\r\n              <p>{podium.length > 1 ? podium[0].player_trophies : \"-\"}</p>\r\n            </div>\r\n            <img\r\n                src={firstBadge}\r\n                className=\"leaderboard-top3-card-badge\"\r\n                alt=\"Trophy Icon\"\r\n              />\r\n          </div>\r\n          <div className=\"leaderboard-top3-card-container\">\r\n            <Avatar\r\n              style={{ verticalAlign: \"middle\", border: \"1px solid #fff\" }}\r\n              src={SelectAvatarSrc(podium.length > 1 ? podium[2].player_avatar.toString() : \"-\")}\r\n              size=\"large\"\r\n            />\r\n            <h4>{podium.length > 1 ? podium[2].player_username.toUpperCase() : \"-\"}</h4>\r\n            <div className=\"leaderboard-top3-card-trophies\">\r\n              <img\r\n                src={TrophyIcon}\r\n                className=\"leaderboard-top3-card-trophy-icon\"\r\n                alt=\"Trophy Icon\"\r\n              />\r\n              <p>{podium.length > 1 ? podium[2].player_trophies : \"-\"}</p>\r\n            </div>\r\n            <img\r\n                src={thirdBadge}\r\n                className=\"leaderboard-top3-card-badge\"\r\n                alt=\"Trophy Icon\"\r\n              />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"leaderboard-listview\">\r\n          <ListView players={leaderboardListRest} />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OnlinePlayersModal;\r\n","export default __webpack_public_path__ + \"static/media/dollar.64e7d751.svg\";","export default __webpack_public_path__ + \"static/media/logout.1642665f.svg\";","export default __webpack_public_path__ + \"static/media/teamwork.e032ff14.svg\";","export default __webpack_public_path__ + \"static/media/podium.ab0d1827.svg\";","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Context\r\nimport { useUserContext } from \"../../context/user/user.context\";\r\nimport { useMatchContext } from \"../../context/match/match.context\";\r\n\r\n// Utils\r\nimport { getUserIdByToken, IToken } from \"../../utils/getUserIdByToken\";\r\nimport SelectAvatarSrc from 'utils/chooseAvatar';\r\n\r\n// Components\r\nimport InfoBox from \"../../components/Containers/InfoBox\";\r\nimport AvatarContainer from \"../../components/Containers/Avatar\";\r\nimport PlayButton from \"../../components/PlayButton\";\r\nimport MatchInviteModal from \"../../components/MatchInviteModal\";\r\nimport OnlinePlayersModal from \"../../components/OnlinePlayersModal\";\r\nimport ChooseAvatarDrawer from \"../../components/ChooseAvatarDrawer\";\r\nimport LeaderboardModal from '../../components/LeaderboardModal';\r\n\r\n// Assets\r\nimport CoinIcon from \"../../assets/icons/dollar.svg\";\r\nimport TrophyIcon from \"../../assets/icons/trophy.svg\";\r\nimport LogoutIcon from \"../../assets/icons/logout.svg\";\r\nimport ComunityIcon from '../../assets/icons/teamwork.svg';\r\nimport PodiumIcon from '../../assets/icons/podium.svg';\r\n\r\n\r\nconst Home = () => {\r\n  const {\r\n    username,\r\n    coins,\r\n    trophies,\r\n    avatar,\r\n    userProfile,\r\n    logout,\r\n    setUserOnline,\r\n    getOnlinePlayers,\r\n  } = useUserContext();\r\n\r\n  const { receivedInvite } = useMatchContext();\r\n\r\n  const [ userAvatar, setUserAvatar] = React.useState(SelectAvatarSrc(avatar));\r\n  const [onlinePlayersModalVisible, setOnlinePlayersModalVisible] = React.useState(false);\r\n  const [chooseAvatarsDrawerVisible, setChooseAvatarsDrawerVisible] = React.useState(false);\r\n  const [leaderboardModalVisible, setLeaderboardModalVisible] = React.useState(false);\r\n  const [battleInviteModalVisible, setBattleInviteModalVisible] = React.useState(false);\r\n\r\n  let userId: IToken = getUserIdByToken();\r\n\r\n  React.useEffect(() => {\r\n    userProfile(userId.key.toString());\r\n    setUserOnline();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (receivedInvite) setBattleInviteModalVisible(true);\r\n  }, [receivedInvite]);\r\n\r\n  React.useEffect(() => {\r\n    if(avatar) setUserAvatar(SelectAvatarSrc(avatar))\r\n  }, [avatar]);\r\n\r\n  const playWithFriend = () => {\r\n    getOnlinePlayers();\r\n    setOnlinePlayersModalVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"MainPage-Containter\">\r\n      \r\n      <ChooseAvatarDrawer openDrawer={chooseAvatarsDrawerVisible} closeDrawer={() => setChooseAvatarsDrawerVisible(false)}/>\r\n\r\n      {battleInviteModalVisible &&\r\n        <MatchInviteModal openModal={battleInviteModalVisible} closeModal={() => setBattleInviteModalVisible(false)} />\r\n      }\r\n\r\n      {onlinePlayersModalVisible && \r\n        <OnlinePlayersModal openModal={onlinePlayersModalVisible} closeModal={() => setOnlinePlayersModalVisible(false)}/>\r\n      }\r\n      \r\n      {leaderboardModalVisible &&\r\n        <LeaderboardModal openModal={leaderboardModalVisible} closeModal={() => setLeaderboardModalVisible(false)}/>\r\n      }\r\n\r\n      <div className=\"MainPage-header\">\r\n        <div className=\"MainPage-header-infobox\">\r\n          <div style={{marginRight: \"20px\"}}>\r\n            <InfoBox text={coins} icon={CoinIcon}  />\r\n          </div>\r\n          <InfoBox text={trophies} icon={TrophyIcon} />\r\n        </div>\r\n\r\n        <div className=\"mainPage-comunity-button-Container\">\r\n          <img src={ComunityIcon} className=\"mainPage-ComunityButton-icon\" alt=\"comunity button icon\" />\r\n        </div>\r\n\r\n        <div className=\"mainPage-podium-button-Container\" onClick={(e) => {e.stopPropagation(); setLeaderboardModalVisible(true)}}>\r\n          <img src={PodiumIcon} className=\"mainPage-podiumButton-icon\" alt=\"comunity button icon\" />\r\n        </div>\r\n\r\n        <img src={LogoutIcon} onClick={() => logout(userId.key.toString())} className=\"mainPage-logout-button\" alt=\"logout icon\" />\r\n      </div>\r\n\r\n      <AvatarContainer avatarSrc={userAvatar} username={username} openDrawer={() => setChooseAvatarsDrawerVisible(true)}/>\r\n\r\n      <div className=\"MainPage-Buttons\">\r\n        <div className=\"MainPage-buttons-Friend\">\r\n          <PlayButton text=\"Jogar com amigo\" clickAction={() => playWithFriend()}/>\r\n        </div>\r\n        <PlayButton text=\"Jogar aleatorio\" clickAction={() => playWithFriend()}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { Form, Input, Button, message, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport { useUserContext } from \"../../context/user/user.context\";\r\n\r\nimport history from '../../utils/history';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const { login } = useUserContext();\r\n\r\n  const onFinish = (values: any) => {\r\n    login(values);\r\n  };\r\n\r\n  const goRegister= () => {\r\n    history.push('/register');\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login-Container\">\r\n\r\n      <div className=\"Login-Header\">\r\n        <h1>MktWar</h1>\r\n      </div>\r\n\r\n      <div className=\"Login-Form\">\r\n        <Form\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Insira seu usuário por favor !\" }]}\r\n          >\r\n            <Input placeholder=\"Usuário\" prefix={<UserOutlined />} size=\"large\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Insira sua senha por favor !\" }]}\r\n          >\r\n            <Input.Password size=\"large\" placeholder=\"Senha\" prefix={<LockOutlined />}/>\r\n          </Form.Item>\r\n\r\n          <Form.Item >\r\n            <div className=\"mktwar-default-button-container login-button\" >\r\n                <button className=\"mktwar-default-button login-button\">Login</button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n\r\n      <div className=\"Login-Footer\" >\r\n        <button className=\"login-register-option\" onClick={goRegister}>\r\n          Não tem uma conta ? Criar Conta\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { Form, Input, Button, message, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport { useUserContext } from \"../../context/user/user.context\";\r\n\r\nimport history from '../../utils/history';\r\n\r\nconst Register = () => {\r\n\r\n  const { createUser, errorMsg } = useUserContext();\r\n\r\n  const onFinish = (values: any) => {\r\n    createUser(values);\r\n  };\r\n\r\n  const goLogin= () => {\r\n    history.push('/login');\r\n  }\r\n\r\n  return (\r\n    <div className=\"Register-Container\">\r\n\r\n      <div className=\"Register-Header\">\r\n        <h1>MktWar</h1>\r\n      </div>\r\n\r\n      <div className=\"Register-Form\">\r\n        <Form\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Insira seu nome por favor !\" }]}\r\n          >\r\n            <Input placeholder=\"nome\" prefix={<UserOutlined />} size=\"large\"/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Insira seu usuário por favor !\" }]}\r\n          >\r\n            <Input placeholder=\"Usuário\" prefix={<UserOutlined />} size=\"large\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Insira sua senha por favor !\" }]}\r\n          >\r\n            <Input.Password size=\"large\" placeholder=\"Senha\" prefix={<LockOutlined />}/>\r\n          </Form.Item>\r\n\r\n          <Form.Item >\r\n            <div className=\"mktwar-default-button-container\" >\r\n                <button className=\"mktwar-default-button\">Criar conta</button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n\r\n      <div className=\"Register-Footer\">\r\n        <button onClick={goLogin} className=\"register-login-option\">Já tem uma conta ? Fazer Login</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export default __webpack_public_path__ + \"static/media/back.2a97e7c8.svg\";","export default __webpack_public_path__ + \"static/media/check.4f0d5f3a.svg\";","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n//Assets\r\nimport BackIcon from \"assets/icons/back.svg\";\r\nimport CheckIcon from \"assets/icons/check.svg\";\r\nimport TrophyIcon from \"assets/icons/trophy.svg\";\r\nimport TimerAnimation from \"assets/animations/timer.json\";\r\nimport SwordsAnimation from \"assets/animations/swords.json\";\r\nimport FirtRoundCountdownAnimation from 'assets/animations/firstRoundCountdown.json';\r\n\r\n// Context\r\nimport { useMatchContext } from \"context/match/match.context\";\r\n\r\n//Utils\r\nimport SelectAvatarSrc from 'utils/chooseAvatar';\r\n\r\nimport { Avatar } from \"antd\";\r\n\r\nimport Lottie from \"react-lottie\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Lobby = () => {\r\n  const {\r\n    ownerInfo,\r\n    opponentInfo,\r\n    setUserReady,\r\n    opponentReady,\r\n    matchStarted,\r\n  } = useMatchContext();\r\n\r\n  const { matchId } = useParams<{ matchId: string }>();\r\n\r\n  const [opponentAccepted, setOpponentAccepted] = React.useState(false);\r\n  const [userReady_, setUserReady_] = React.useState(false);\r\n  const [opponentReady_, setOpponentReady_] = React.useState(false);\r\n  const [opponentInformation, setOpponentInformation] = React.useState({\r\n    username: \"\",\r\n    name: \"\",\r\n    avatar: 0,\r\n    trophies: 0,\r\n  });\r\n\r\n  // Setting opponent information\r\n  React.useEffect(() => {\r\n    if (opponentInfo.id !== 0) {\r\n      setOpponentAccepted(true);\r\n\r\n      setOpponentInformation({\r\n        username: opponentInfo.username,\r\n        name: opponentInfo.name,\r\n        trophies: opponentInfo.trophies,\r\n        avatar: opponentInfo.avatar,\r\n      });\r\n    }\r\n  }, [opponentInfo]);\r\n\r\n  // Check if opponent is ready\r\n  React.useEffect(() => {\r\n    if (opponentReady) {\r\n      setOpponentReady_(true);\r\n    }\r\n  }, [opponentReady]);\r\n\r\n  const setReady = () => {\r\n    setUserReady_(true);\r\n    setUserReady(matchId);\r\n  };\r\n\r\n  const timerAnimationOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: TimerAnimation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  const SwordsAnimationOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: SwordsAnimation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  const FirstRoundCountdownAnimationOptions = {\r\n    loop: false,\r\n    autoplay: true,\r\n    animationData: FirtRoundCountdownAnimation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"lobby-container\">\r\n      <div className=\"lobby-header\">\r\n        <img\r\n          src={BackIcon}\r\n          className=\"BackButton-icon\"\r\n          alt=\"back button icon\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"lobby-players-section\">\r\n        <div className=\"lobby-owner-section\">\r\n          <div className=\"lobby-owner-avatar\">\r\n            <Avatar\r\n              size={100}\r\n              style={{ verticalAlign: \"middle\", border: \"2px solid #fff\" }}\r\n              src={\"/\" + SelectAvatarSrc(ownerInfo.avatar.toString())}\r\n            />\r\n\r\n            {userReady_ &&\r\n            <div className=\"lobby-check-owner-container\">\r\n              <img src={CheckIcon} className=\"Lobby-check-icon\" alt=\"user avatar\" />\r\n            </div>\r\n          }\r\n          </div>\r\n\r\n          <div className=\"lobby-owner-info\">\r\n            <h2>{ownerInfo.name.toUpperCase()}</h2>\r\n            <h4>@{ownerInfo.username}</h4>\r\n            <div className=\"lobby-trophy-section\">\r\n              <img\r\n                src={TrophyIcon}\r\n                className=\"Lobby-trophy-icon\"\r\n                alt=\"user avatar icon\"\r\n              />\r\n              <p>{ownerInfo.trophies}</p>\r\n            </div>\r\n            <button className=\"lobby-ready-button\" onClick={setReady} disabled={userReady_}>\r\n              Pronto\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"lobby-divider\">\r\n          <hr className=\"lobby-divider-line\" />\r\n          <div className=\"lobby-divider-icon-container\">\r\n            {!opponentAccepted && (\r\n              <Lottie\r\n                options={timerAnimationOptions}\r\n                style={{\r\n                  height: 150,\r\n                  marginLeft: 5,\r\n                }}\r\n              />\r\n            )}\r\n            {opponentAccepted && !matchStarted && (\r\n              <Lottie\r\n                options={SwordsAnimationOptions}\r\n                style={{\r\n                  height: 110,\r\n                  marginLeft: 5,\r\n                }}\r\n              />\r\n            )}\r\n            {opponentAccepted && matchStarted && (\r\n              <Lottie\r\n                options={FirstRoundCountdownAnimationOptions}\r\n                style={{\r\n                  height: 110,\r\n                  marginLeft: -1,\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {!opponentAccepted && (\r\n          <h1 className=\"lobby-waiting\">Esperando adversário...</h1>\r\n        )}\r\n        {opponentAccepted && (\r\n          <div className=\"lobby-opponent-section\">\r\n            <div className=\"lobby-opponent-info\">\r\n              <h2>{opponentInformation.name.toUpperCase()}</h2>\r\n              <h4>@{opponentInformation.username}</h4>\r\n              <div className=\"lobby-trophy-section\">\r\n                <img\r\n                  src={TrophyIcon}\r\n                  className=\"Lobby-trophy-icon\"\r\n                  alt=\"user avatar icon\"\r\n                />\r\n                <p>{opponentInformation.trophies}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"lobby-opponent-avatar\">\r\n              <Avatar\r\n                size={100}\r\n                style={{ verticalAlign: \"middle\", border: \"2px solid #fff\" }}\r\n                src={\"/\" + SelectAvatarSrc(opponentInformation.avatar.toString())}\r\n              />\r\n              {opponentReady_ &&\r\n                <div className=\"lobby-check-opponent-container\">\r\n                  <img src={CheckIcon} className=\"Lobby-check-icon\" alt=\"user avatar\" />\r\n                </div>\r\n              }\r\n            </div>\r\n\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { Avatar } from \"antd\";\r\n\r\ninterface IAnswerButtonProps {\r\n  text: string;\r\n  answerId: number;\r\n  onSelect: () => void;\r\n  isDisabled: boolean;\r\n  roundEnd: boolean;\r\n\r\n  ownerSelected: number;\r\n  opponentSelected: number;\r\n  correctId: number;\r\n  ownerAvatar: string;\r\n  opponentAvatar: string;\r\n}\r\n\r\nconst AnswerButton: React.FC<IAnswerButtonProps> = ({\r\n  text,\r\n  answerId,\r\n  onSelect,\r\n  isDisabled,\r\n  ownerSelected,\r\n  opponentSelected,\r\n  correctId,\r\n  roundEnd,\r\n  ownerAvatar,\r\n  opponentAvatar\r\n}) => {\r\n  const [showAnswer, setShowAnswer] = React.useState(roundEnd);\r\n  const [selected, setSelected] = React.useState(false);\r\n  const [correctAnswer, setCorrectAnswer] = React.useState(false);\r\n  const [ownerSelectedAnswer, setOwnerSelectedAnswer] = React.useState(false);\r\n  const [opponentSelectedAnswer, setOpponentSelectedAnswer] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (answerId === correctId)\r\n      setCorrectAnswer(true);\r\n\r\n    if (ownerSelected === answerId)\r\n      setOwnerSelectedAnswer(true);\r\n\r\n    if (opponentSelected === answerId)\r\n      setOpponentSelectedAnswer(true);\r\n\r\n    console.log(roundEnd)\r\n\r\n    return (() => {\r\n      setCorrectAnswer(false);\r\n      setOwnerSelectedAnswer(false);\r\n      setOpponentSelectedAnswer(false);\r\n    })\r\n\r\n  }, [roundEnd]);\r\n\r\n  const onAnswerSelected = () => {\r\n    setSelected(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"answer-button-container\">\r\n      <button\r\n        className={\r\n          roundEnd && correctAnswer\r\n            ?\r\n            \"answer-button answer-correct\"\r\n            :\r\n            roundEnd && !correctAnswer\r\n              ?\r\n              \"answer-button answer-wrong\"\r\n              :\r\n              !roundEnd && !selected ?\r\n                \"answer-button \"\r\n                :\r\n                \"answer-button answer-button-selected\"\r\n        }\r\n        onClick={() => { onSelect(); onAnswerSelected() }}\r\n        disabled={isDisabled}\r\n      >\r\n        {text}\r\n      </button>\r\n\r\n      {ownerSelectedAnswer && roundEnd && (\r\n        <div className=\"answer-owner-avatar\">\r\n          <Avatar\r\n            size={40}\r\n            style={{ verticalAlign: \"middle\", border: \"2px solid #fff\" }}\r\n            src={ownerAvatar}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {opponentSelectedAnswer && roundEnd  && (\r\n        <div className=\"answer-opponent-avatar\">\r\n          <Avatar\r\n            size={40}\r\n            style={{ verticalAlign: \"middle\", border: \"2px solid #fff\" }}\r\n            src={opponentAvatar}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswerButton;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { Avatar } from \"antd\";\r\n\r\n// Components\r\nimport AnswerButton from \"./components/AnswerButton\";\r\n\r\n// Context\r\nimport { useMatchContext } from \"context/match/match.context\";\r\n\r\n// Hooks\r\nimport useWindowDimensions from \"../../hooks/useWindowDimension\";\r\n\r\n//Utils\r\nimport SelectAvatarSrc from 'utils/chooseAvatar';\r\n\r\nconst Quiz = () => {\r\n  const {\r\n    _id,\r\n    round,\r\n    roundResult,\r\n    ownerInfo,\r\n    opponentInfo,\r\n    answerQuestion,\r\n  } = useMatchContext();\r\n\r\n  const [disableAnswerButtons, setDisableAnswerButtons] = React.useState(false);\r\n\r\n  const AnswerQuestion = React.useCallback((answerId: any) => {\r\n    setDisableAnswerButtons(true);\r\n    answerQuestion(\r\n      parseInt(_id),\r\n      round.questionId,\r\n      answerId,\r\n      round.correctAnswer\r\n    );\r\n  }, [ roundResult.ownerSelected, roundResult.opponentSelected]);\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <div className=\"quiz-header-container\">\r\n        <div className=\"quiz-timer-container\">{round.roundTime}</div>\r\n\r\n        <div className=\"quiz-players-container\">\r\n          <div className=\"quiz-players-owner\">\r\n            <Avatar\r\n              size={width <= 800 ? 40 : 64}\r\n              style={{verticalAlign: \"middle\", border: \"2px solid #fff\" }}\r\n              src={\"/\" + SelectAvatarSrc(ownerInfo.avatar.toString())}\r\n            />\r\n            <div className=\"quiz-players-owner-info\">\r\n              <h3>{ownerInfo.username}</h3>\r\n              <p>{roundResult.ownerScore ? roundResult.ownerScore : '0'}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"quiz-players-opponent\">\r\n            <Avatar\r\n              size={width <= 800 ? 40 : 64}\r\n              style={{verticalAlign: \"middle\", border: \"2px solid #fff\" }}\r\n              src={\"/\" + SelectAvatarSrc(opponentInfo.avatar.toString())}\r\n            />\r\n            <div className=\"quiz-players-opponent-info\">\r\n              <h3>{opponentInfo.username}</h3>\r\n              <p>{roundResult.opponentScore ? roundResult.opponentScore : '0'}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"quiz-bottom-container\">\r\n        <div className=\"quiz-question-container\">\r\n          <h4>{round.questionText}</h4>\r\n        </div>\r\n\r\n        <div className=\"quiz-answers-container\">\r\n          {round.answers.map((answer) => (\r\n            <AnswerButton\r\n              key={answer.id}\r\n              text={answer.text}\r\n              answerId={answer.id}\r\n              onSelect={() => AnswerQuestion(answer.id)}\r\n              isDisabled={disableAnswerButtons}\r\n              ownerSelected={roundResult.ownerSelected}\r\n              opponentSelected={roundResult.opponentSelected}\r\n              correctId={round.correctAnswer}\r\n              roundEnd={round.showCorrectAnswer}\r\n              ownerAvatar={\"/\" + SelectAvatarSrc(ownerInfo.avatar.toString())}\r\n              opponentAvatar={\"/\" + SelectAvatarSrc(opponentInfo.avatar.toString())}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\n\r\ninterface IRoundCounterProps{\r\n  currentRound: number;\r\n  totalRounds: number;\r\n}\r\n\r\nconst RoundCounter: React.FC<IRoundCounterProps> = ({currentRound, totalRounds}) => {\r\n  return(\r\n    <div className=\"round-counter-container\">\r\n      <h1> Round {currentRound}</h1>\r\n      <h3> {currentRound} de {totalRounds}</h3>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoundCounter;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Components\r\nimport Quiz from \"components/Quiz\";\r\nimport RoundCounter from \"components/Quiz/components/RoundCounter\";\r\n\r\n\r\n// Context\r\nimport { useMatchContext } from \"context/match/match.context\";\r\n\r\nconst Game = () => {\r\n  const { game } = useMatchContext();\r\n\r\n  const [ showRoundScreen, setShowRoundScreen ] = React.useState(false);\r\n  const [ showGameScreen, setShowGameScreen ] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n\r\n    if(game.showRoundScreen === true){\r\n      setShowGameScreen(false);\r\n      setShowRoundScreen(true);\r\n    }\r\n    else{\r\n      setShowRoundScreen(false);\r\n      setShowGameScreen(true);\r\n    }\r\n\r\n    console.log(game);\r\n\r\n  }, [game])\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n    {showRoundScreen && <RoundCounter currentRound={game.currentRound} totalRounds={game.totalRound}  />}\r\n\r\n    {showGameScreen && <Quiz />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/gold-cup.bdf9af24.svg\";","export default __webpack_public_path__ + \"static/media/silver-cup.faaec05a.svg\";","export default __webpack_public_path__ + \"static/media/empty-podium.47681261.svg\";","import React from 'react';\r\nimport './style.css';\r\n\r\nimport { Avatar } from \"antd\";\r\n\r\n// Assets\r\nimport TrophyAnimation from \"../../assets/animations/trophy-win2.json\";\r\nimport GoldTrophyIcon from '../../assets/icons/gold-cup.svg'\r\nimport SilverTrophyIcon from '../../assets/icons/silver-cup.svg'\r\nimport EmptyPodiumIcon from '../../assets/icons/empty-podium.svg'\r\nimport CoinIcon from \"../../assets/icons/dollar.svg\";\r\nimport TrophyIcon from \"../../assets/icons/trophy.svg\";\r\n\r\n//Utils\r\nimport SelectAvatarSrc from 'utils/chooseAvatar';\r\n\r\n// Hooks\r\nimport useWindowDimensions from \"../../hooks/useWindowDimension\";\r\n\r\n// Context\r\nimport { useMatchContext } from \"../../context/match/match.context\";\r\n\r\n// Components\r\nimport InfoBox from \"../../components/Containers/InfoBox\";\r\n\r\nconst ResultPage = () => {\r\n    const {\r\n        ownerInfo,\r\n        opponentInfo,\r\n        matchResult,\r\n        matchEnded\r\n    } = useMatchContext();\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n    const [winned, setWinned] = React.useState(matchResult.owner.winned);\r\n    const [lost, setlost] = React.useState(!matchResult.owner.winned && matchResult.opponent.winned);\r\n    const [tied, setTied] = React.useState(!matchResult.owner.winned && !matchResult.opponent.winned);\r\n\r\n    return (\r\n        <div className=\"result-container\">\r\n            <div className=\"result-card-info\">\r\n                <div className=\"result-top-info\">\r\n\r\n                    {winned &&\r\n                        <>\r\n                            <img src={GoldTrophyIcon} className=\"result-icon\" alt=\"gold cup icon\" />\r\n                            <h1>Você ganhou !</h1>\r\n                        </>\r\n                    }\r\n\r\n                    {lost &&\r\n                        <>\r\n                            <img src={SilverTrophyIcon} className=\"result-icon\" alt=\"silver cup icon\" />\r\n                            <h1>Você perdeu !</h1>\r\n                        </>\r\n                    }\r\n\r\n                    {tied &&\r\n                        <>\r\n                            <img src={EmptyPodiumIcon} className=\"result-icon\" alt=\"empty podium icon\" />\r\n                            <h1>Empate !</h1>\r\n                        </>\r\n                    }\r\n\r\n\r\n                </div>\r\n                <div className='result-players'>\r\n                    <div className=\"result-player-owner\">\r\n                        <div className=\"result-player-owner-info\">\r\n                            <Avatar\r\n                                size={width <= 900 ? 64 : 100}\r\n                                style={{border: \"4px solid #fff\", verticalAlign: \"middle\", marginBottom: \"10px\" }}\r\n                                src={\"/\" + SelectAvatarSrc(ownerInfo.avatar.toString())}\r\n                                />\r\n                            <h1>{ownerInfo ? ownerInfo.username.toUpperCase() : ''}</h1>\r\n                            <p>{matchResult ? matchResult.owner.score : 0}</p>\r\n                        </div>\r\n\r\n                        <div className=\"result-earnings-container\">\r\n                            <div className=\"result-earnings-throphies\">\r\n                                <img src={TrophyIcon} className=\"earnings-icon\" alt=\"trophies icon\" />\r\n                                <h3>{tied ? \"0\" : winned ? \"+10\" : \"-4\"}</h3>\r\n                            </div>\r\n\r\n                            <div className=\"result-earnings-coins\">\r\n                                <img src={CoinIcon} className=\"earnings-icon\" alt=\"coins icon\" />\r\n                                <h3>{tied ? \"0\" : winned ? \"+50\" : \"-10\"}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"result-player-opponent\">\r\n                        <Avatar\r\n                            size={width <= 900 ? 64 : 100}\r\n                            style={{ border: \"4px solid #fff\", verticalAlign: \"middle\", marginBottom: \"10px\" }}\r\n                            src={\"/\" + SelectAvatarSrc(opponentInfo.avatar.toString())}\r\n                        />\r\n                        <h1>{opponentInfo ? opponentInfo.username.toUpperCase() : ''}</h1>\r\n                        <p>{matchResult ? matchResult.opponent.score : 0}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n\r\n\r\n            <div className=\"result-sair-container\">\r\n                <button onClick={matchEnded} className=\"result-sair\">Sair</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultPage;","import React from 'react';\r\n\r\n//Route\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\n\r\n// Helpers\r\nimport { getCookie } from '../../utils/handleCookie'\r\n\r\n\r\ninterface IPrivateRouteProps extends RouteProps{\r\n  // tslint:disable-next-line:no-any\r\n  component: any\r\n}\r\n\r\nconst ProtectedRoute = (props: IPrivateRouteProps) => {\r\n  const {component: Component, ...rest } = props;\r\n\r\n  return(\r\n    <Route {...rest} render={props => (\r\n        getCookie('_token') != \"\"\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","\r\n// Router\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// Pages\r\nimport HomePage from './pages/Home';\r\nimport LoginPage from './pages/Login';\r\nimport RegisterPage from './pages/Register';\r\nimport LobbyPage from './pages/Lobby';\r\nimport GamePage from './pages/Game';\r\nimport ResultPage from './pages/Result'\r\n\r\n// Components\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\n\r\nconst Router = () => {\r\n\r\n  return(\r\n    <Switch> \r\n      <Route path='/login' component={LoginPage} />\r\n      <Route path='/register' component={RegisterPage} />\r\n\r\n      <ProtectedRoute exact path='/' component={HomePage} />\r\n\r\n      <ProtectedRoute exact path='/lobby/:matchId' component={LobbyPage} />\r\n      <ProtectedRoute exact path='/game' component={GamePage} />\r\n      <ProtectedRoute exact path='/result' component={ResultPage} />\r\n\r\n    </Switch>\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/style/index.css\";\r\nimport './assets/style/antd.css';\r\n\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n// Context\r\nimport { SocketContext, socket } from \"./context/socket\";\r\nimport UserState from \"./context/user/user.state\";\r\nimport MatchState from './context/match/match.state'\r\n\r\nimport Routes from \"./router\";\r\nimport history from \"./utils/history\";\r\n\r\nimport { Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <SocketContext.Provider value={socket}>\r\n        <UserState>\r\n          <MatchState>\r\n            <Routes />\r\n          </MatchState>\r\n        </UserState>\r\n      </SocketContext.Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}