.ant-modal-content,
.ant-modal-header {
  background-color: var(--primary-color-hover);
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;

  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
  border:0;
}

.ant-modal-title {
  font-family: var(--primary-font);
  color: #fff;
  
}

.ant-modal-body {
  background:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25'%3E%3Cdefs%3E%3Cpattern id='pattern' width='40' height='40' viewBox='0 0 40 40' patternUnits='userSpaceOnUse' patternTransform='rotate(135)'%3E%3Crect id='pattern-background' width='400%25' height='400%25' fill='rgba(78, 24, 112,1)'%3E%3C/rect%3E%3Ccircle fill='rgba(113, 31, 160,1)' cx='-14' cy='-12' r='1'%3E%3C/circle%3E%3Cpath fill='rgba(122, 38, 176,1)' d='M 20 20a 1 1 0 0 0 0 2a 1 1 0 0 0 0-2zM-10-10h 60v 60h-60z'%3E%3C/path%3E%3C/pattern%3E%3C/defs%3E%3Crect fill='url(%23pattern)' height='100%25' width='100%25'%3E%3C/rect%3E%3C/svg%3E");
  color: #fff;

  display: flex;
  justify-content: center;
  flex-direction: column;
  

  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
}

.matchInvite-challenger-info {
  display: flex;
  width: 90%;

  padding: 5px;
}

.matchInvite-challenger-description {
  font-family: var(--secundary-font);

  margin-left: 10px;
}

.matchInvite-trophy-section{
  display: flex;
  align-items: center;
}

.matchInvite-trophy-section h2{
  margin-left: 7px;
  color: var(--secundary-color);

}

.matchInvite-buttons {
  width: 90%;
  display: flex;
  justify-content: space-between;
  align-items: center;

  margin-top: 30px;
}

.matchInvite-deny,
.matchInvite-accept {
  width: 150px;
  height: 60px;

  font-family: var(--primary-font);
  color: #fff;

  border: 0;
  border-radius: 5px;
}

.matchInvite-accept {
   background: var(--green);
}

.matchInvite-deny {
  background: var(--red);
}

.matchInvite-accept:hover {
  background: var(--green-hover);
  cursor: pointer;
}

.matchInvite-deny:hover {
 background: var(--red-hover);
 cursor: pointer;
}
